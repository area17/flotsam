{"version":3,"file":"flotsam.module.js","sources":["../src/DispatcherEvent.js","../src/index.js","../src/EventComponent.js"],"sourcesContent":["// helper class to run event busing\nclass DispatcherEvent {\n    constructor(eventName) {\n        this.eventName = eventName\n        this.callbacks = []\n    }\n\n    registerCallback(callback) {\n        this.callbacks.push(callback)\n    }\n\n    unregisterCallback(callback) {\n        const index = this.callbacks.indexOf(callback)\n        if (index > -1) {\n            this.callbacks.splice(index, 1)\n        }\n    }\n\n    fire(data) {\n        const callbacks = this.callbacks.slice(0)\n        callbacks.forEach((callback) => {\n            callback(data)\n        })\n    }\n}\n\nexport default DispatcherEvent\n","import EventComponent from './EventComponent'\nimport './styles.css'\n\nconst OPEN_CLASS = 'flotsam-modal--is-open'\n\nclass flotsam extends EventComponent {\n    ////////////////////////////////////////////////////\n    // construct\n    ////////////////////////////////////////////////////\n    constructor(options) {\n        // class inheritance setup\n        // adding core events module\n        super()\n\n        // for debugging\n        this.options = options\n\n        this.$input = options.el\n        this.data = options.data ? options.data : null\n        this.minChars = options.minChars ? options.minChars : 2\n        this.inputPreview =\n            typeof options.inputPreview === 'boolean'\n                ? options.inputPreview\n                : true\n        this.getData =\n            typeof options.getData === 'function' ? options.getData : null\n        this.markResults =\n            typeof options.markResults === 'boolean'\n                ? options.markResults\n                : true\n        this.submitOnReturn =\n            typeof options.submitOnReturn === 'boolean'\n                ? options.submitOnReturn\n                : true\n\n        this.hint = options.hint\n            ? options.hint\n            : 'When autocomplete results are available, use up and down arrows to review and enter to select. Touch device users, explore by touch or with swipe gestures.'\n\n        this.noResultsText = options.noResultsText\n            ? options.noResultsText\n            : 'Sorry there are no results for ::term:: please search again.'\n\n        this.isEmpty = true\n        this.hasEmptyState = true\n        this.filteredData = []\n\n        // native state\n        this.isOpen = false\n\n        this.init()\n    }\n\n    ////////////////////////////////////////////////////\n    // inits\n    ////////////////////////////////////////////////////\n\n    // setup has some housekeeping of inputs and attrs to increase quality of life\n    setUp() {\n        // add autocomplete off to input to not get in the way of dropdown\n        this.$input.setAttribute('autocomplete', 'off')\n        this.$input.setAttribute('aria-expanded', 'false')\n        this.$input.setAttribute('aria-haspopup', 'listbox')\n        this.$input.setAttribute('role', 'combobox')\n        this.$input.setAttribute('aria-autocomplete', 'list')\n        this.$input.setAttribute('aria-owns', `modal-${this.uid}-list`)\n        this.$input.id = `flotsam-input-${this.uid}`\n        this.$input.setAttribute(\n            'aria-describedby',\n            `assistiveHint-${this.uid}`\n        )\n    }\n\n    initModal() {\n        // append modal to the page\n        this.$input.insertAdjacentHTML('afterend', this.generateModal())\n        this.$input.insertAdjacentHTML('afterend', this.generateAssistiveHint())\n        this.$input.insertAdjacentHTML('afterend', this.generateStatus())\n\n        // grab an instance of elems to use later\n        this.$modal = document.querySelector(`#modal-${this.uid}`)\n        this.$status = document.querySelector(`#status-${this.uid}`)\n        this.list = this.$modal.querySelector('.flotsam-modal__list')\n        this.$empty = this.$modal.querySelector('.flotsam-modal__empty')\n\n        // intial modal styles\n        this.$modal.style.pointerEvents = 'none'\n        this.$modal.style.visibility = 'hidden'\n    }\n\n    initInputCheck() {\n        if (this.isDisabled) return\n\n        // if we want to use ajax (or some other method of returning a promise) we build a promise to get data\n        if (this.getData) {\n            this.$input.addEventListener('input', (e) => {\n                this.value = e.target.value\n\n                if (this.minCharsExcceded()) {\n                    super.dispatch('loadingData', {\n                        input: this.$input,\n                        modal: this.$modal,\n                        //flotsam: this,\n                        //options: this.options,\n                    })\n                    this.getData(this.value).then((result) => {\n                        this.filteredData = result\n\n                        super.dispatch('loadedData', {\n                            input: this.$input,\n                            modal: this.$modal,\n                            //flotsam: this,\n                            //options: this.options,\n                        })\n\n                        this.update(true)\n                    })\n                } else if (this.isOpen) {\n                    this.closeModal()\n                }\n            })\n        } else {\n            // else if we have static data lets just use that\n            this.$input.addEventListener('input', (e) => {\n                this.value = e.target.value\n                if (this.minCharsExcceded()) {\n                    this.update(false)\n                } else if (this.isOpen) {\n                    this.closeModal()\n                }\n            })\n        }\n    }\n\n    ////////////////////////////////////////////////////\n    // init assisitve hint\n    ////////////////////////////////////////////////////\n\n    generateAssistiveHint() {\n        return `\n            <div id=\"assistiveHint-${this.uid}\" class=\"flotsam-modal__hint\">\n                ${this.hint}\n            </div>\n        `\n    }\n\n    generateStatus() {\n        return `\n            <div id=\"status-${this.uid}\" aria-role='status' aria-live=\"polite\" class=\"flotsam-modal__status\">\n\n            </div>\n        `\n    }\n\n    update(dynamic) {\n        if (!dynamic) {\n            // filter the data\n            if (this.data && this.data.length !== 0) {\n                this.filteredData = [...this.data].filter((item) => {\n                    if (item.toLowerCase().includes(this.value.toLowerCase())) {\n                        return item\n                    }\n                })\n            } else {\n                this.filteredData = []\n            }\n        }\n\n        if (this.filteredData.length === 0) {\n            this.showEmptyState()\n        } else {\n            // we have items remove the empty state\n            this.hideEmptyState()\n            this.generateListItems()\n\n            // this only triggers once then sets the modal to open state\n            if (this.isOpen === false) {\n                this.openModal()\n            }\n        }\n    }\n\n    preventSubmit(e) {\n        e.preventDefault()\n    }\n\n    showEmptyState() {\n        this.removeListItems()\n        const str = this.noResultsText.replace(\n            '::term::',\n            `<strong>\"${this.value}\"</strong>`\n        )\n        const emptyHtml = `<div>${str}</div>`\n        this.$empty.innerHTML = emptyHtml\n        this.$empty.style.display = 'block'\n\n        if (!this.isOpen) {\n            this.openModal()\n        }\n    }\n\n    hideEmptyState() {\n        this.$empty.innerHTML = ''\n        this.$empty.style.display = 'none'\n    }\n\n    ////////////////////////////////////////////////////\n    // hide and show modal\n    // bread and butter functions all event setup\n    // and breakdown here\n    ////////////////////////////////////////////////////\n    openModal() {\n        if (this.isDisabled) return\n\n        document.addEventListener('submit', this.preventSubmit)\n\n        // this way lets us cleanly breakdown this event listener later\n        this.checkKey = this.checkKey.bind(this)\n        document.addEventListener('keydown', this.checkKey, true)\n        this.isOpen = true\n\n        // styles and classes\n        this.$modal.style.pointerEvents = 'auto'\n        this.$modal.style.visibility = 'visible'\n        this.$input.classList.add(OPEN_CLASS)\n        this.$input.setAttribute('aria-expanded', 'true')\n\n        super.dispatch('openModal', {\n            input: this.$input,\n            modal: this.$modal,\n            //flotsam: this,\n            //options: this.options,\n        })\n    }\n\n    closeModal() {\n        // clean up the modal containers\n        this.hideEmptyState()\n        this.removeListItems()\n        this.unsetSelected()\n\n        if (this.isOpen) {\n            document.removeEventListener('submit', this.preventSubmit)\n            document.removeEventListener('keydown', this.checkKey, true)\n        }\n\n        this.$modal.style.pointerEvents = 'none'\n        this.$modal.style.visibility = 'hidden'\n        this.$input.classList.remove(OPEN_CLASS)\n        this.$input.focus()\n\n        this.isOpen = false\n\n        super.dispatch('closeModal', {\n            input: this.$input,\n            modal: this.$modal,\n            //flotsam: this,\n            //options: this.options,\n        })\n    }\n    ////////////////////////////////////////////////////\n    // key event checker - the key event triggers\n    ////////////////////////////////////////////////////\n\n    checkKey(e) {\n        if (e.keyCode == '38') {\n            // up arrowspot\n            this.selectPrev()\n        } else if (e.keyCode == '40') {\n            // down arrow\n            this.selectNext()\n        } else if (e.keyCode == '37') {\n            // left arrow\n        } else if (e.keyCode == '39') {\n            // right arrow\n        } else if (e.keyCode == '27') {\n            // escape\n            e.preventDefault()\n            this.closeModal()\n        } else if (e.keyCode == '9') {\n            // tab\n            e.preventDefault()\n            this.closeModal()\n        } else if (e.keyCode == '13') {\n            // enter\n            e.preventDefault()\n            this.resultClicked(this.currentSelected)\n            this.closeModal()\n            if (this.submitOnReturn) {\n                this.$input.closest('form').submit()\n            }\n        }\n    }\n\n    ////////////////////////////////////////////////////\n    // visual selection of the items on the modal\n    ////////////////////////////////////////////////////\n    selectItem() {\n        const items = [...this.list.querySelectorAll('li')]\n        items.forEach((item, index) => {\n            if (index === this.currentSelected) {\n                item.classList.add('flotsam-modal__selected-item')\n\n                // a11y features\n                item.setAttribute('aria-selected', 'true')\n                this.$input.setAttribute('aria-activedescendant', item.id)\n\n                // if prevew is on show the selected in the input box\n                if (this.inputPreview) {\n                    this.setInput(item.innerText)\n                }\n\n                // !!EVENT!! on select key\n                super.dispatch('selectKey', {\n                    selected: item.textContent.trim(),\n                    value: this.value,\n                    input: this.$input,\n                    modal: this.$modal,\n                    //flotsam: this,\n                    //options: this.options,\n                })\n            } else {\n                item.classList.remove('flotsam-modal__selected-item')\n                item.setAttribute('aria-selected', 'false')\n            }\n        })\n    }\n\n    selectNext() {\n        if (this.currentSelected === null) {\n            this.currentSelected = 0\n        } else {\n            this.currentSelected = this.currentSelected + 1\n        }\n\n        this.selectItem()\n    }\n\n    selectPrev() {\n        this.currentSelected = this.currentSelected - 1\n        this.selectItem()\n    }\n\n    unsetSelected() {\n        // unset selected\n        this.currentSelected = null\n        const items = [...this.list.querySelectorAll('li')]\n\n        // a11y feature\n        this.$input.removeAttribute('aria-activedescendant')\n\n        items.forEach((item) => {\n            item.classList.remove('flotsam-modal__selected-item')\n        })\n    }\n\n    generateModal() {\n        return `\n        <div class=\"flotsam-modal\" id=\"modal-${this.uid}\" >\n            <div class=\"flotsam-modal__inner\">\n                <ul\n                    class=\"flotsam-modal__list\"\n                    role=\"listbox\"\n                    id=\"modal-${this.uid}-list\">\n                </ul>\n                <div class=\"flotsam-modal__empty\" style=\"display: none\"></div>\n            </div>\n        </div>\n    `\n    }\n\n    generateListItems() {\n        // clean up the dropdown of selects\n        this.unsetSelected()\n\n        let list = ``\n\n        this.filteredData.forEach((item, index) => {\n            let response = item\n            if (this.markResults) {\n                const regex = new RegExp(this.value, 'gi')\n                response = item.replace(regex, (str) => {\n                    return `<mark>` + str + '</mark>'\n                })\n            }\n            const posIndex = index + 1\n            list += `\n                <li class=\"flotsam-modal__list-item\" role=\"option\" aria-posinset=\"${posIndex}\" aria-setsize=\"${this.filteredData.length}\" aria-selected=\"false\" id=\"list-item-${index}--${this.uid}\" tab-index=\"-1\">\n                    ${response}\n                </li>`\n        })\n\n        // append list to the screen\n        this.list.innerHTML = list\n\n        // now that list is on DOM add event listeners\n        const listItems = [...this.list.querySelectorAll('li')]\n        listItems.forEach((item, index) => {\n            item.addEventListener('click', () => {\n                this.resultClicked(index)\n                this.closeModal()\n            })\n        })\n    }\n\n    // quick way to breka down list\n    removeListItems() {\n        this.list.innerHTML = ''\n    }\n\n    ////////////////////////////////////////////////////\n    // result clicked\n    ////////////////////////////////////////////////////\n    resultClicked(index) {\n        alert('result clicked')\n        if (index) {\n            const item = this.list.querySelectorAll('li')[index]\n            if (item) {\n                this.setInput(item.innerText)\n                // !!EVENT!! on return key\n                super.dispatch('resultClicked', {\n                    selected: item.textContent.trim(),\n                    value: this.value,\n                    input: this.$input,\n                    modal: this.$modal,\n                })\n            }\n        }\n    }\n\n    ////////////////////////////////////////////////////\n    // visually set input value (optionally triggered)\n    ////////////////////////////////////////////////////\n    setInput(textValue) {\n        this.$input.value = textValue\n    }\n\n    ////////////////////////////////////////////////////\n    // public triggers - USERS SHOULD ONLY USE THESE\n    ////////////////////////////////////////////////////\n    triggerClose() {\n        this.closeModal()\n    }\n\n    triggerDisable() {\n        this.isDisabled = true\n        this.closeModal()\n        super.dispatch('disabled', {\n            input: this.$input,\n            modal: this.$modal,\n            //flotsam: this,\n            //options: this.options,\n        })\n    }\n\n    triggerEnable() {\n        this.isDisabled = false\n    }\n\n    ////////////////////////////////////////////////////\n    // utils\n    ////////////////////////////////////////////////////\n    minCharsExcceded() {\n        if (this.value.length >= this.minChars) {\n            return true\n        } else {\n            return false\n        }\n    }\n\n    ////////////////////////////////////////////////////\n    // init fn - run on singleton creation\n    ////////////////////////////////////////////////////\n    init() {\n        this._self = this // so we can remove event listeners cleanly\n\n        // state\n        this.currentSelected = null\n        this.isDisabled = false\n\n        if (!this.data && !this.getData) {\n            this.isDisabled = true\n            console.error('flotsam: no data specified', this)\n            return\n        }\n\n        this.setUp()\n        // inject the modal onto the page and get an instance of it\n        this.initModal()\n\n        // add listener to onInput of input\n        this.initInputCheck()\n\n        // bug not triggering right away, so set it to next cycle\n        setTimeout(() => {\n            super.dispatch('init', {\n                input: this.$input,\n                modal: this.$modal,\n                //flotsam: this,\n                //options: this.options,\n            })\n        }, 0)\n    }\n}\n\nexport default flotsam\n","import DispatcherEvent from './DispatcherEvent'\n\nclass EventComponent {\n    ////////////////////////////////////////////////////\n    // construct\n    ////////////////////////////////////////////////////\n    constructor() {\n        this.events = {}\n        this.uid = Math.floor(1000 + Math.random() * 90000)\n    }\n\n    ////////////////////////////////////////////////////\n    // event trigger and listeners\n    ////////////////////////////////////////////////////\n    dispatch(eventName, data) {\n        const event = this.events[eventName]\n        if (event) {\n            event.fire(data)\n        }\n    }\n\n    addEventListener(eventName, callback) {\n        let event = this.events[eventName]\n        if (!event) {\n            event = new DispatcherEvent(eventName)\n            this.events[eventName] = event\n        }\n        event.registerCallback(callback)\n    }\n\n    removeEventListener(eventName, callback) {\n        const event = this.events[eventName]\n        if (event && event.callbacks.indexOf(callback) > -1) {\n            event.unregisterCallback(callback)\n            if (event.callbacks.length === 0) {\n                delete this.events[eventName]\n            }\n        }\n    }\n}\n\nexport default EventComponent\n"],"names":["DispatcherEvent","eventName","this","callbacks","_proto","prototype","registerCallback","callback","push","unregisterCallback","index","indexOf","splice","fire","data","slice","forEach","OPEN_CLASS","_EventComponent","flotsam","options","_this","call","$input","el","minChars","inputPreview","getData","markResults","submitOnReturn","hint","noResultsText","isEmpty","hasEmptyState","filteredData","isOpen","init","setUp","EventComponent","setAttribute","uid","id","initModal","insertAdjacentHTML","generateModal","generateAssistiveHint","generateStatus","$modal","document","querySelector","$status","list","$empty","style","pointerEvents","visibility","initInputCheck","_this2","isDisabled","addEventListener","e","value","target","minCharsExcceded","dispatch","input","modal","then","result","update","closeModal","dynamic","_this3","length","concat","filter","item","toLowerCase","includes","showEmptyState","hideEmptyState","generateListItems","openModal","preventSubmit","preventDefault","removeListItems","replace","innerHTML","str","display","checkKey","bind","classList","add","unsetSelected","removeEventListener","remove","focus","keyCode","selectPrev","selectNext","resultClicked","currentSelected","closest","submit","selectItem","_this4","querySelectorAll","setInput","innerText","selected","textContent","trim","items","removeAttribute","_this5","response","regex","RegExp","alert","textValue","triggerClose","triggerDisable","triggerEnable","_this6","_self","console","error","setTimeout","events","Math","floor","random","event"],"mappings":"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"}