{"version":3,"file":"flotsam.cjs","sources":["../src/DispatcherEvent.js","../src/index.js","../src/EventComponent.js"],"sourcesContent":["// helper class to run event busing\nclass DispatcherEvent {\n    constructor(eventName) {\n        this.eventName = eventName\n        this.callbacks = []\n    }\n\n    registerCallback(callback) {\n        this.callbacks.push(callback)\n    }\n\n    unregisterCallback(callback) {\n        const index = this.callbacks.indexOf(callback)\n        if (index > -1) {\n            this.callbacks.splice(index, 1)\n        }\n    }\n\n    fire(data) {\n        const callbacks = this.callbacks.slice(0)\n        callbacks.forEach((callback) => {\n            callback(data)\n        })\n    }\n}\n\nexport default DispatcherEvent\n","import EventComponent from './EventComponent'\n\nconst OPEN_CLASS = 'is-open'\n\nclass floatsam extends EventComponent {\n    ////////////////////////////////////////////////////\n    // construct\n    ////////////////////////////////////////////////////\n    constructor(options) {\n        // class inheritance setup\n        // adding core events module\n        super()\n\n        // for debugging\n        this.options = options\n\n        this.$input = options.el\n        this.data = options.data ? options.data : false\n        this.minChars = options.minChars ? options.minChars : 2\n        this.inputPreview = options.inputPreview ? options.inputPreview : true\n        this.onAjax = options.onAjax\n\n        this.isEmpty = true\n        this.hasEmptyState = true\n\n        // native state\n        this.isOpen = false\n\n        this.init()\n    }\n\n    ////////////////////////////////////////////////////\n    // inits\n    ////////////////////////////////////////////////////\n\n    // setup has some housekeeping of inputs and attrs to increase quality of life\n    setUp() {\n        // add autocomplete off to input to not get in the way of dropdown\n        this.$input.setAttribute('autocomplete', 'off')\n        this.$input.setAttribute('aira-expanded', 'false')\n        this.$input.setAttribute('aira-haspopup', 'listbox')\n        this.$input.setAttribute('role', 'combobox')\n        this.$input.setAttribute('aira-autocomplete', 'list')\n        this.$input.setAttribute('aira-owns', `modal-${super.uid}-list`)\n        this.$input.id = `autocomplete-input-${super.uid}`\n    }\n\n    initModal() {\n        // append modal to the page\n        this.$input.insertAdjacentHTML('afterend', this.generateModal())\n\n        // grab an instance of elems to use later\n        this.$modal = document.querySelector(`#modal-${super.uid}`)\n        this.list = this.$modal.querySelector('.autocomplete-modal__list')\n        this.$empty = this.$modal.querySelector('.autocomplete-modal__empty')\n\n        // intial modal styles\n        this.$modal.style.pointerEvents = 'none'\n        this.$modal.style.visibility = 'hidden'\n    }\n\n    initInputCheck() {\n        if (this.isDisabled) return\n\n        // if we want to use ajax we build a promise to get data\n        if (this.onAjax) {\n            this.$input.addEventListener('input', (e) => {\n                this.value = e.target.value\n\n                if (this.minCharsExcceded()) {\n                    super.dispatch('loadingData', {\n                        input: this.$input,\n                        modal: this.$modal,\n                        floatsam: this,\n                        options: this.options,\n                    })\n                    this.onAjax(this.value).then((result) => {\n                        this.data = result\n\n                        super.dispatch('loadedData', {\n                            input: this.$input,\n                            modal: this.$modal,\n                            floatsam: this,\n                            options: this.options,\n                        })\n\n                        this.update()\n                    })\n                } else if (this.isOpen) {\n                    this.closeModal()\n                }\n            })\n        } else {\n            // else if we have static data lets just use that\n            this.$input.addEventListener('input', (e) => {\n                this.value = e.target.value\n                if (this.minCharsExcceded()) {\n                    this.update()\n                } else if (this.isOpen) {\n                    this.closeModal()\n                }\n            })\n        }\n    }\n\n    update() {\n        // filter the data\n        if (this.data.length !== 0) {\n            this.data = this.data.filter((item) => {\n                if (item.toLowerCase().includes(this.value.toLowerCase())) {\n                    return item\n                }\n            })\n        }\n\n        if (this.data.length === 0) {\n            this.showEmptyState()\n        } else {\n            // we have items remove the empty state\n            this.hideEmptyState()\n            this.generateListItems()\n\n            // this only triggers once then sets the modal to open state\n            if (this.isOpen === false) {\n                this.openModal()\n            }\n        }\n    }\n\n    preventSubmit(e) {\n        e.preventDefault()\n    }\n\n    showEmptyState() {\n        this.removeListItems()\n        const emptyHtml = `<div>Sorry there are no results for <strong>\"${this.value}\"</strong> please search again</div>`\n        this.$empty.innerHTML = emptyHtml\n        this.$empty.style.display = 'block'\n\n        if (!this.isOpen) {\n            this.openModal()\n        }\n    }\n\n    hideEmptyState() {\n        this.$empty.innerHTML = ''\n        this.$empty.style.display = 'none'\n    }\n\n    ////////////////////////////////////////////////////\n    // hide and show modal\n    // bread and butter functions all event setup\n    // and breakdown here\n    ////////////////////////////////////////////////////\n    openModal() {\n        if (this.isDisabled) return\n\n        document.addEventListener('submit', this.preventSubmit)\n\n        // this way lets us cleanly breakdown this event listener later\n        this.checkKey = this.checkKey.bind(this)\n        document.addEventListener('keydown', this.checkKey, true)\n        this.isOpen = true\n\n        // styles and classes\n        this.$modal.style.pointerEvents = 'auto'\n        this.$modal.style.visibility = 'visible'\n        this.$input.classList.add(OPEN_CLASS)\n        this.$input.setAttribute('aira-expanded', 'true')\n\n        super.dispatch('openModal', {\n            input: this.$input,\n            modal: this.$modal,\n            floatsam: this,\n            options: this.options,\n        })\n    }\n\n    closeModal() {\n        // clean up the modal containers\n        this.hideEmptyState()\n        this.removeListItems()\n        this.unsetSelected()\n\n        if (this.isOpen) {\n            document.removeEventListener('submit', this.preventSubmit)\n            document.removeEventListener('keydown', this.checkKey, true)\n        }\n\n        this.$modal.style.pointerEvents = 'none'\n        this.$modal.style.visibility = 'hidden'\n        this.$input.classList.remove(OPEN_CLASS)\n        this.$input.focus()\n\n        this.isOpen = false\n\n        super.dispatch('closeModal', {\n            input: this.$input,\n            modal: this.$modal,\n            floatsam: this,\n            options: this.options,\n        })\n    }\n    ////////////////////////////////////////////////////\n    // key event checker - the key event triggers\n    ////////////////////////////////////////////////////\n\n    checkKey(e) {\n        if (e.keyCode == '38') {\n            // up arrowspot\n            this.selectPrev()\n        } else if (e.keyCode == '40') {\n            // down arrow\n            this.selectNext()\n        } else if (e.keyCode == '37') {\n            // left arrow\n        } else if (e.keyCode == '39') {\n            // right arrow\n        } else if (e.keyCode == '27') {\n            // escape\n            e.preventDefault()\n            this.closeModal()\n        } else if (e.keyCode == '9') {\n            // tab\n            e.preventDefault()\n            this.closeModal()\n        } else if (e.keyCode == '13') {\n            // enter\n            e.preventDefault()\n            this.closeModal()\n            this.$input.closest('form').submit()\n        }\n    }\n\n    ////////////////////////////////////////////////////\n    // visual selection of the items on the modal\n    ////////////////////////////////////////////////////\n    selectItem() {\n        const items = [...this.list.querySelectorAll('li')]\n        items.forEach((item, index) => {\n            if (index === this.currentSelected) {\n                item.classList.add('selected-item')\n\n                // a11y features\n                item.setAttribute('aira-selected', 'true')\n                this.$input.setAttribute('aira-activedescendant', item.id)\n\n                // if prevew is on show the selected in the input box\n                if (this.inputPreview) {\n                    this.setInput(item.innerText)\n                }\n\n                // !!EVENT!! on select key\n                super.dispatch('selectKey', {\n                    selected: item.textContent,\n                    input: this.$input,\n                    modal: this.$modal,\n                    floatsam: this,\n                    options: this.options,\n                })\n            } else {\n                item.classList.remove('selected-item')\n                item.setAttribute('aira-selected', 'false')\n            }\n        })\n    }\n\n    selectNext() {\n        if (this.currentSelected === null) {\n            this.currentSelected = 0\n        } else {\n            this.currentSelected = this.currentSelected + 1\n        }\n\n        this.selectItem()\n    }\n\n    selectPrev() {\n        this.currentSelected = this.currentSelected - 1\n        this.selectItem()\n    }\n\n    unsetSelected() {\n        // unset selected\n        this.currentSelected = null\n        const items = [...this.list.querySelectorAll('li')]\n\n        // a11y feature\n        this.$input.removeAttribute('aira-activedescendant')\n\n        items.forEach((item) => {\n            item.classList.remove('selected-item')\n        })\n    }\n\n    generateModal() {\n        return `\n        <div class=\"autocomplete-modal\" id=\"modal-${super.uid}\" >\n            <div class=\"autocomplete-modal__inner\">\n                <ul \n                    class=\"autocomplete-modal__list\" \n                    role=\"listbox\" \n                    id=\"modal-${super.uid}-list\">\n                </ul>\n                <div class=\"autocomplete-modal__empty\" style=\"display: none\"></div>\n            </div>\n        </div>\n    `\n    }\n\n    generateListItems() {\n        // clean up the dropdown of selects\n        this.unsetSelected()\n\n        let list = ``\n\n        this.data.forEach((item, index) => {\n            const regex = new RegExp(this.value, 'gi')\n            const response = item.replace(regex, (str) => {\n                return (\n                    `<span class=\"autocomplete-modal__list-highlight\">` +\n                    str +\n                    '</span>'\n                )\n            })\n            const posIndex = index + 1\n            list += `\n                <li class=\"autocomplete-modal__list-item\" role=\"option\" aria-posinset=\"${posIndex}\" aira-selected=\"false\" id=\"list-item--${this.uid}\">\n                    <button tab-index=\"-1\">\n                        ${response}\n                    </button>\n                </li>`\n        })\n\n        // append list to the screen\n        this.list.innerHTML = list\n\n        // now that list is on DOM add event listeners\n        const listItems = [...this.list.querySelectorAll('li')]\n        listItems.forEach((item) => {\n            item.addEventListener('click', () => {\n                this.setInput(item.innerText)\n                this.closeModal()\n            })\n        })\n    }\n\n    // quick way to breka down list\n    removeListItems() {\n        this.list.innerHTML = ''\n    }\n\n    ////////////////////////////////////////////////////\n    // visually set input value (optionally triggered)\n    ////////////////////////////////////////////////////\n    setInput(textValue) {\n        this.$input.value = textValue\n    }\n\n    ////////////////////////////////////////////////////\n    // public triggers - USERS SHOULD ONLY USE THESE\n    ////////////////////////////////////////////////////\n    triggerClose() {\n        this.closeModal()\n    }\n\n    triggerDisable() {\n        this.isDisabled = true\n        this.closeModal()\n        super.dispatch('disabled', {\n            input: this.$input,\n            modal: this.$modal,\n            floatsam: this,\n            options: this.options,\n        })\n    }\n\n    triggerEnable() {\n        this.isDisabled = false\n    }\n\n    ////////////////////////////////////////////////////\n    // utils\n    ////////////////////////////////////////////////////\n    minCharsExcceded() {\n        if (this.value.length >= this.minChars) {\n            return true\n        } else {\n            return false\n        }\n    }\n\n    ////////////////////////////////////////////////////\n    // init fn - run on singleton creation\n    ////////////////////////////////////////////////////\n    init() {\n        this._self = this // so we can remove event listeners cleanly\n\n        // state\n        this.currentSelected = null\n        this.isDisabled = false\n\n        this.setUp()\n        // inject the modal onto the page and get an instance of it\n        this.initModal()\n\n        // add listener to onInput of input\n        this.initInputCheck()\n\n        // bug not triggering right away, so set it to next cycle\n        setTimeout(() => {\n            super.dispatch('init', {\n                input: this.$input,\n                modal: this.$modal,\n                floatsam: this,\n                options: this.options,\n            })\n        }, 0)\n    }\n}\n\nexport default floatsam\n","import DispatcherEvent from './DispatcherEvent'\n\nclass EventComponent {\n    ////////////////////////////////////////////////////\n    // construct\n    ////////////////////////////////////////////////////\n    constructor() {\n        this.events = {}\n        this.uid = Math.floor(1000 + Math.random() * 90000)\n    }\n\n    ////////////////////////////////////////////////////\n    // event trigger and listeners\n    ////////////////////////////////////////////////////\n    dispatch(eventName, data) {\n        const event = this.events[eventName]\n        if (event) {\n            event.fire(data)\n        }\n    }\n\n    on(eventName, callback) {\n        let event = this.events[eventName]\n        if (!event) {\n            event = new DispatcherEvent(eventName)\n            this.events[eventName] = event\n        }\n        event.registerCallback(callback)\n    }\n\n    off(eventName, callback) {\n        const event = this.events[eventName]\n        if (event && event.callbacks.indexOf(callback) > -1) {\n            event.unregisterCallback(callback)\n            if (event.callbacks.length === 0) {\n                delete this.events[eventName]\n            }\n        }\n    }\n}\n\nexport default EventComponent\n"],"names":["DispatcherEvent","eventName","this","callbacks","_proto","prototype","registerCallback","callback","push","unregisterCallback","index","indexOf","splice","fire","data","slice","forEach","OPEN_CLASS","options","_this","_EventComponent","call","$input","el","minChars","inputPreview","onAjax","isEmpty","hasEmptyState","isOpen","init","floatsam","EventComponent","setUp","setAttribute","uid","id","initModal","insertAdjacentHTML","generateModal","$modal","document","querySelector","list","$empty","style","pointerEvents","visibility","initInputCheck","isDisabled","addEventListener","e","_this2","value","target","minCharsExcceded","dispatch","input","modal","then","result","update","closeModal","_this3","length","filter","item","toLowerCase","includes","showEmptyState","hideEmptyState","generateListItems","openModal","preventSubmit","preventDefault","removeListItems","innerHTML","display","checkKey","bind","classList","add","unsetSelected","removeEventListener","remove","focus","keyCode","selectPrev","selectNext","closest","submit","selectItem","_this4","concat","querySelectorAll","currentSelected","setInput","innerText","selected","textContent","removeAttribute","items","_this5","replace","regex","str","response","textValue","triggerClose","triggerDisable","triggerEnable","_this6","_self","setTimeout","events","Math","floor","random","event","on","off"],"mappings":"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"}