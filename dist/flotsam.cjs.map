{"version":3,"file":"flotsam.cjs","sources":["../src/DispatcherEvent.js","../src/index.js","../src/EventComponent.js"],"sourcesContent":["// helper class to run event busing\nclass DispatcherEvent {\n    constructor(eventName) {\n        this.eventName = eventName\n        this.callbacks = []\n    }\n\n    registerCallback(callback) {\n        this.callbacks.push(callback)\n    }\n\n    unregisterCallback(callback) {\n        const index = this.callbacks.indexOf(callback)\n        if (index > -1) {\n            this.callbacks.splice(index, 1)\n        }\n    }\n\n    fire(data) {\n        const callbacks = this.callbacks.slice(0)\n        callbacks.forEach((callback) => {\n            callback(data)\n        })\n    }\n}\n\nexport default DispatcherEvent\n","import EventComponent from './EventComponent'\nimport './styles.css'\n\nconst OPEN_CLASS = 'flotsam-modal--is-open'\n\nclass flotsam extends EventComponent {\n    ////////////////////////////////////////////////////\n    // construct\n    ////////////////////////////////////////////////////\n    constructor(options) {\n        // class inheritance setup\n        // adding core events module\n        super()\n\n        // for debugging\n        this.options = options\n\n        this.$input = options.el\n        this.data = options.data ? options.data : null\n        this.minChars = options.minChars ? options.minChars : 2\n        this.inputPreview = typeof(options.inputPreview) === 'boolean' ? options.inputPreview : true\n        this.getData = typeof(options.getData) === 'function' ? options.getData : null\n\n        this.hint = options.hint\n            ? options.hint\n            : 'When autocomplete results are available, use up and down arrows to review and enter to select. Touch device users, explore by touch or with swipe gestures.'\n\n        this.noResultsText = options.noResultsText\n            ? options.noResultsText\n            : 'Sorry there are no results for ::term:: please search again.'\n\n        this.isEmpty = true\n        this.hasEmptyState = true\n        this.filteredData = []\n\n        // native state\n        this.isOpen = false\n\n        this.init()\n    }\n\n    ////////////////////////////////////////////////////\n    // inits\n    ////////////////////////////////////////////////////\n\n    // setup has some housekeeping of inputs and attrs to increase quality of life\n    setUp() {\n        // add autocomplete off to input to not get in the way of dropdown\n        this.$input.setAttribute('autocomplete', 'off')\n        this.$input.setAttribute('aria-expanded', 'false')\n        this.$input.setAttribute('aria-haspopup', 'listbox')\n        this.$input.setAttribute('role', 'combobox')\n        this.$input.setAttribute('aria-autocomplete', 'list')\n        this.$input.setAttribute('aria-owns', `modal-${this.uid}-list`)\n        this.$input.id = `flotsam-input-${this.uid}`\n        this.$input.setAttribute(\n            'aria-describedby',\n            `assistiveHint-${this.uid}`\n        )\n    }\n\n    initModal() {\n        // append modal to the page\n        this.$input.insertAdjacentHTML('afterend', this.generateModal())\n        this.$input.insertAdjacentHTML('afterend', this.generateAssistiveHint())\n        this.$input.insertAdjacentHTML('afterend', this.generateStatus())\n\n        // grab an instance of elems to use later\n        this.$modal = document.querySelector(`#modal-${this.uid}`)\n        this.$status = document.querySelector(`#status-${this.uid}`)\n        this.list = this.$modal.querySelector('.flotsam-modal__list')\n        this.$empty = this.$modal.querySelector('.flotsam-modal__empty')\n\n        // intial modal styles\n        this.$modal.style.pointerEvents = 'none'\n        this.$modal.style.visibility = 'hidden'\n    }\n\n    initInputCheck() {\n        if (this.isDisabled) return\n\n        // if we want to use ajax (or some other method of returning a promise) we build a promise to get data\n        if (this.getData) {\n            this.$input.addEventListener('input', (e) => {\n                this.value = e.target.value\n\n                if (this.minCharsExcceded()) {\n                    super.dispatch('loadingData', {\n                        input: this.$input,\n                        modal: this.$modal,\n                        //flotsam: this,\n                        //options: this.options,\n                    })\n                    this.getData(this.value).then((result) => {\n                        this.filteredData = result\n\n                        super.dispatch('loadedData', {\n                            input: this.$input,\n                            modal: this.$modal,\n                            //flotsam: this,\n                            //options: this.options,\n                        })\n\n                        this.update(true)\n                    })\n                } else if (this.isOpen) {\n                    this.closeModal()\n                }\n            })\n        } else {\n            // else if we have static data lets just use that\n            this.$input.addEventListener('input', (e) => {\n                this.value = e.target.value\n                if (this.minCharsExcceded()) {\n                    this.update(false)\n                } else if (this.isOpen) {\n                    this.closeModal()\n                }\n            })\n        }\n    }\n\n    ////////////////////////////////////////////////////\n    // init assisitve hint\n    ////////////////////////////////////////////////////\n\n    generateAssistiveHint() {\n        return `\n            <div id=\"assistiveHint-${this.uid}\" class=\"flotsam-modal__hint\">\n                ${this.hint}\n            </div>\n        `\n    }\n\n    generateStatus() {\n        return `\n            <div id=\"status-${this.uid}\" aria-role='status' aria-live=\"polite\" class=\"flotsam-modal__status\">\n                \n            </div>\n        `\n    }\n\n    update(dynamic) {\n        if (!dynamic) {\n            // filter the data\n            if (this.data && this.data.length !== 0) {\n                this.filteredData = [...this.data].filter((item) => {\n                    if (item.toLowerCase().includes(this.value.toLowerCase())) {\n                        return item\n                    }\n                })\n            } else {\n                this.filteredData = []\n            }\n        }\n\n        if (this.filteredData.length === 0) {\n            this.showEmptyState()\n        } else {\n            // we have items remove the empty state\n            this.hideEmptyState()\n            this.generateListItems()\n\n            // this only triggers once then sets the modal to open state\n            if (this.isOpen === false) {\n                this.openModal()\n            }\n        }\n    }\n\n    preventSubmit(e) {\n        e.preventDefault()\n    }\n\n    showEmptyState() {\n        this.removeListItems()\n        const str = this.noResultsText.replace('::term::', `<strong>\"${this.value}\"</strong>`)\n        const emptyHtml = `<div>${str}</div>`\n        this.$empty.innerHTML = emptyHtml\n        this.$empty.style.display = 'block'\n\n        if (!this.isOpen) {\n            this.openModal()\n        }\n    }\n\n    hideEmptyState() {\n        this.$empty.innerHTML = ''\n        this.$empty.style.display = 'none'\n    }\n\n    ////////////////////////////////////////////////////\n    // hide and show modal\n    // bread and butter functions all event setup\n    // and breakdown here\n    ////////////////////////////////////////////////////\n    openModal() {\n        if (this.isDisabled) return\n\n        document.addEventListener('submit', this.preventSubmit)\n\n        // this way lets us cleanly breakdown this event listener later\n        this.checkKey = this.checkKey.bind(this)\n        document.addEventListener('keydown', this.checkKey, true)\n        this.isOpen = true\n\n        // styles and classes\n        this.$modal.style.pointerEvents = 'auto'\n        this.$modal.style.visibility = 'visible'\n        this.$input.classList.add(OPEN_CLASS)\n        this.$input.setAttribute('aria-expanded', 'true')\n\n        super.dispatch('openModal', {\n            input: this.$input,\n            modal: this.$modal,\n            //flotsam: this,\n            //options: this.options,\n        })\n    }\n\n    closeModal() {\n        // clean up the modal containers\n        this.hideEmptyState()\n        this.removeListItems()\n        this.unsetSelected()\n\n        if (this.isOpen) {\n            document.removeEventListener('submit', this.preventSubmit)\n            document.removeEventListener('keydown', this.checkKey, true)\n        }\n\n        this.$modal.style.pointerEvents = 'none'\n        this.$modal.style.visibility = 'hidden'\n        this.$input.classList.remove(OPEN_CLASS)\n        this.$input.focus()\n\n        this.isOpen = false\n\n        super.dispatch('closeModal', {\n            input: this.$input,\n            modal: this.$modal,\n            //flotsam: this,\n            //options: this.options,\n        })\n    }\n    ////////////////////////////////////////////////////\n    // key event checker - the key event triggers\n    ////////////////////////////////////////////////////\n\n    checkKey(e) {\n        if (e.keyCode == '38') {\n            // up arrowspot\n            this.selectPrev()\n        } else if (e.keyCode == '40') {\n            // down arrow\n            this.selectNext()\n        } else if (e.keyCode == '37') {\n            // left arrow\n        } else if (e.keyCode == '39') {\n            // right arrow\n        } else if (e.keyCode == '27') {\n            // escape\n            e.preventDefault()\n            this.closeModal()\n        } else if (e.keyCode == '9') {\n            // tab\n            e.preventDefault()\n            this.closeModal()\n        } else if (e.keyCode == '13') {\n            // enter\n            e.preventDefault()\n            this.closeModal()\n            this.$input.closest('form').submit()\n        }\n    }\n\n    ////////////////////////////////////////////////////\n    // visual selection of the items on the modal\n    ////////////////////////////////////////////////////\n    selectItem() {\n        const items = [...this.list.querySelectorAll('li')]\n        items.forEach((item, index) => {\n            if (index === this.currentSelected) {\n                item.classList.add('flotsam-modal__selected-item')\n\n                // a11y features\n                item.setAttribute('aria-selected', 'true')\n                this.$input.setAttribute('aria-activedescendant', item.id)\n\n                // if prevew is on show the selected in the input box\n                if (this.inputPreview) {\n                    this.setInput(item.innerText)\n                }\n\n                // !!EVENT!! on select key\n                super.dispatch('selectKey', {\n                    selected: item.textContent.trim(),\n                    value: this.value,\n                    input: this.$input,\n                    modal: this.$modal,\n                    //flotsam: this,\n                    //options: this.options,\n                })\n            } else {\n                item.classList.remove('flotsam-modal__selected-item')\n                item.setAttribute('aria-selected', 'false')\n            }\n        })\n    }\n\n    selectNext() {\n        if (this.currentSelected === null) {\n            this.currentSelected = 0\n        } else {\n            this.currentSelected = this.currentSelected + 1\n        }\n\n        this.selectItem()\n    }\n\n    selectPrev() {\n        this.currentSelected = this.currentSelected - 1\n        this.selectItem()\n    }\n\n    unsetSelected() {\n        // unset selected\n        this.currentSelected = null\n        const items = [...this.list.querySelectorAll('li')]\n\n        // a11y feature\n        this.$input.removeAttribute('aria-activedescendant')\n\n        items.forEach((item) => {\n            item.classList.remove('flotsam-modal__selected-item')\n        })\n    }\n\n    generateModal() {\n        return `\n        <div class=\"flotsam-modal\" id=\"modal-${this.uid}\" >\n            <div class=\"flotsam-modal__inner\">\n                <ul \n                    class=\"flotsam-modal__list\"\n                    role=\"listbox\" \n                    id=\"modal-${this.uid}-list\">\n                </ul>\n                <div class=\"flotsam-modal__empty\" style=\"display: none\"></div>\n            </div>\n        </div>\n    `\n    }\n\n    generateListItems() {\n        // clean up the dropdown of selects\n        this.unsetSelected()\n\n        let list = ``\n\n        this.filteredData.forEach((item, index) => {\n            const regex = new RegExp(this.value, 'gi')\n            const response = item.replace(regex, (str) => {\n                return (\n                    `<span class=\"flotsam-modal__list-highlight\">` +\n                    str +\n                    '</span>'\n                )\n            })\n            const posIndex = index + 1\n            list += `\n                <li class=\"flotsam-modal__list-item\" role=\"option\" aria-posinset=\"${posIndex}\" aria-setsize=\"${this.filteredData.length}\" aria-selected=\"false\" id=\"list-item-${index}--${this.uid}\" tab-index=\"-1\">\n                    ${response}\n                </li>`\n        })\n\n        // append list to the screen\n        this.list.innerHTML = list\n\n        // now that list is on DOM add event listeners\n        const listItems = [...this.list.querySelectorAll('li')]\n        listItems.forEach((item) => {\n            item.addEventListener('click', () => {\n                this.setInput(item.innerText)\n                this.closeModal()\n            })\n        })\n    }\n\n    // quick way to breka down list\n    removeListItems() {\n        this.list.innerHTML = ''\n    }\n\n    ////////////////////////////////////////////////////\n    // visually set input value (optionally triggered)\n    ////////////////////////////////////////////////////\n    setInput(textValue) {\n        this.$input.value = textValue\n    }\n\n    ////////////////////////////////////////////////////\n    // public triggers - USERS SHOULD ONLY USE THESE\n    ////////////////////////////////////////////////////\n    triggerClose() {\n        this.closeModal()\n    }\n\n    triggerDisable() {\n        this.isDisabled = true\n        this.closeModal()\n        super.dispatch('disabled', {\n            input: this.$input,\n            modal: this.$modal,\n            //flotsam: this,\n            //options: this.options,\n        })\n    }\n\n    triggerEnable() {\n        this.isDisabled = false\n    }\n\n    ////////////////////////////////////////////////////\n    // utils\n    ////////////////////////////////////////////////////\n    minCharsExcceded() {\n        if (this.value.length >= this.minChars) {\n            return true\n        } else {\n            return false\n        }\n    }\n\n    ////////////////////////////////////////////////////\n    // init fn - run on singleton creation\n    ////////////////////////////////////////////////////\n    init() {\n        this._self = this // so we can remove event listeners cleanly\n\n        // state\n        this.currentSelected = null\n        this.isDisabled = false\n\n        if (!this.data && !this.getData) {\n            this.isDisabled = true\n            console.error('flotsam: no data specified', this)\n            return\n        }\n\n        this.setUp()\n        // inject the modal onto the page and get an instance of it\n        this.initModal()\n\n        // add listener to onInput of input\n        this.initInputCheck()\n\n        // bug not triggering right away, so set it to next cycle\n        setTimeout(() => {\n            super.dispatch('init', {\n                input: this.$input,\n                modal: this.$modal,\n                //flotsam: this,\n                //options: this.options,\n            })\n        }, 0)\n    }\n}\n\nexport default flotsam\n","import DispatcherEvent from './DispatcherEvent'\n\nclass EventComponent {\n    ////////////////////////////////////////////////////\n    // construct\n    ////////////////////////////////////////////////////\n    constructor() {\n        this.events = {}\n        this.uid = Math.floor(1000 + Math.random() * 90000)\n    }\n\n    ////////////////////////////////////////////////////\n    // event trigger and listeners\n    ////////////////////////////////////////////////////\n    dispatch(eventName, data) {\n        const event = this.events[eventName]\n        if (event) {\n            event.fire(data)\n        }\n    }\n\n    addEventListener(eventName, callback) {\n        let event = this.events[eventName]\n        if (!event) {\n            event = new DispatcherEvent(eventName)\n            this.events[eventName] = event\n        }\n        event.registerCallback(callback)\n    }\n\n    removeEventListener(eventName, callback) {\n        const event = this.events[eventName]\n        if (event && event.callbacks.indexOf(callback) > -1) {\n            event.unregisterCallback(callback)\n            if (event.callbacks.length === 0) {\n                delete this.events[eventName]\n            }\n        }\n    }\n}\n\nexport default EventComponent\n"],"names":["DispatcherEvent","eventName","this","callbacks","_proto","prototype","registerCallback","callback","push","unregisterCallback","index","indexOf","splice","fire","data","slice","forEach","OPEN_CLASS","_EventComponent","options","_this","$input","el","minChars","inputPreview","getData","hint","noResultsText","isEmpty","hasEmptyState","filteredData","isOpen","init","flotsam","EventComponent","setUp","setAttribute","uid","id","initModal","insertAdjacentHTML","generateModal","generateAssistiveHint","generateStatus","$modal","document","querySelector","$status","list","$empty","style","pointerEvents","visibility","initInputCheck","isDisabled","addEventListener","e","_this2","value","target","minCharsExcceded","dispatch","call","input","modal","then","result","update","closeModal","dynamic","_this3","length","concat","filter","item","toLowerCase","includes","showEmptyState","hideEmptyState","generateListItems","openModal","preventSubmit","preventDefault","removeListItems","str","replace","innerHTML","display","checkKey","bind","classList","add","unsetSelected","removeEventListener","remove","focus","keyCode","selectPrev","selectNext","closest","submit","selectItem","_this4","querySelectorAll","currentSelected","setInput","innerText","selected","textContent","trim","items","removeAttribute","_this5","regex","RegExp","response","posIndex","textValue","triggerClose","triggerDisable","triggerEnable","_self","console","error","setTimeout","_this6","events","Math","floor","random","event"],"mappings":"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"}