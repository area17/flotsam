{"version":3,"file":"flotsam.cjs","sources":["../src/index.js"],"sourcesContent":["const modal = () => {\n  return `\n        <div class=\"autocomplete-modal testing......\">\n            <div class=\"autocomplete-modal__inner\">\n                <ul class=\"autocomplete-modal__list\" role=\"combobox\">\n                </ul>\n            </div>\n        </div>\n    `\n}\n\nconst OPEN_CLASS = 'is-open'\n\n// helper class to run event busing\nclass DispatcherEvent {\n  constructor(eventName) {\n    this.eventName = eventName\n    this.callbacks = []\n  }\n\n  registerCallback(callback) {\n    this.callbacks.push(callback)\n  }\n\n  unregisterCallback(callback) {\n    const index = this.callbacks.indexOf(callback)\n    if (index > -1) {\n      this.callbacks.splice(index, 1)\n    }\n  }\n\n  fire(data) {\n    const callbacks = this.callbacks.slice(0)\n    callbacks.forEach((callback) => {\n      callback(data)\n    })\n  }\n}\n\nclass floatsam {\n  ////////////////////////////////////////////////////\n  // construct\n  ////////////////////////////////////////////////////\n  constructor(options) {\n    alert('dd')\n    this.events = {}\n\n    // for debugging\n    this.options = options\n\n    this.$input = options.el\n    this.data = options.data ? options.data : false\n    this.minChars = options.minChars ? options.minChars : 2\n    this.isOpen = false\n    this.isListEmpty = true\n    this.isFocused = false\n    this.inputPreview = true\n    this.onAjax = options.onAjax\n    this.init()\n  }\n\n  ////////////////////////////////////////////////////\n  // event trigger and listeners\n  ////////////////////////////////////////////////////\n  dispatch(eventName, data) {\n    const event = this.events[eventName]\n    if (event) {\n      event.fire(data)\n    }\n  }\n\n  on(eventName, callback) {\n    let event = this.events[eventName]\n    if (!event) {\n      event = new DispatcherEvent(eventName)\n      this.events[eventName] = event\n    }\n    event.registerCallback(callback)\n  }\n\n  off(eventName, callback) {\n    const event = this.events[eventName]\n    if (event && event.callbacks.indexOf(callback) > -1) {\n      event.unregisterCallback(callback)\n      if (event.callbacks.length === 0) {\n        delete this.events[eventName]\n      }\n    }\n  }\n\n  ////////////////////////////////////////////////////\n  // inits\n  ////////////////////////////////////////////////////\n\n  // setup has some housekeeping of inputs and attrs to increase quality of life\n  setUp() {\n    // add autocomplete off to input to not get in the way of dropdown\n    this.$input.setAttribute('autocomplete', 'off')\n  }\n\n  initModal() {\n    // append modal to the page\n    this.$input.insertAdjacentHTML('afterend', modal())\n\n    // grab an instance of it to use later\n    this.modal = document.querySelector('.autocomplete-modal')\n    this.list = this.modal.querySelector('.autocomplete-modal__list')\n\n    // intial modal styles\n    this.modal.style.pointerEvents = 'none'\n    this.modal.style.visibility = 'hidden'\n  }\n\n  initInputCheck() {\n    // check the input\n\n    if (this.isDisabled) return\n\n    // if we want to use ajax we build a promise to get data\n    if (this.onAjax) {\n      this.$input.addEventListener('input', (e) => {\n        this.value = e.target.value\n\n        if (this.value.length >= this.minChars) {\n          this.dispatch('loadingData', {\n            input: this.$input,\n            modal: this.modal,\n            floatsam: this,\n            options: this.options,\n          })\n          this.onAjax(this.value).then((result) => {\n            this.data = result\n\n            this.dispatch('loadedData', {\n              input: this.$input,\n              modal: this.modal,\n              floatsam: this,\n              options: this.options,\n            })\n\n            this.update()\n          })\n        } else {\n          this.closeModal()\n        }\n      })\n    } else {\n      this.$input.addEventListener('input', (e) => {\n        this.value = e.target.value\n        if (this.value.length >= this.minChars) {\n          this.update()\n        }\n      })\n    }\n  }\n\n  update() {\n    // do all data updates here\n\n    // grab a copy of the current list so we can do some minipulation\n\n    if (this.data) {\n      console.log(this.value)\n      this.generateListItems()\n\n      // this only triggers once then sets the modal to open state\n      if (this.isOpen === false) {\n        this.openModal()\n      }\n    } else {\n      this.closeModal()\n    }\n  }\n\n  preventSubmit(e) {\n    e.preventDefault()\n  }\n\n  ////////////////////////////////////////////////////\n  // hide and show modal\n  // bread and butter functions all event setup\n  // and breakdown here\n  ////////////////////////////////////////////////////\n  openModal() {\n    if (this.isDisabled) return\n\n    document.addEventListener('submit', this.preventSubmit)\n    console.log('adding keydown')\n    this.checkKey = this.checkKey.bind(this)\n    document.addEventListener('keydown', this.checkKey, true)\n\n    // styles and classes\n    this.modal.style.pointerEvents = 'auto'\n    this.modal.style.visibility = 'visible'\n    this.$input.classList.add(OPEN_CLASS)\n\n    this.isOpen = true\n\n    this.dispatch('openModal', {\n      input: this.$input,\n      modal: this.modal,\n      floatsam: this,\n      options: this.options,\n    })\n  }\n\n  closeModal() {\n    console.log('close list')\n    this.list.innerHTML = ''\n    this.currentSelected = null\n    if (this.isOpen) {\n      document.removeEventListener('submit', this.preventSubmit)\n      console.log('removing keydown')\n      document.removeEventListener('keydown', this.checkKey, true)\n    }\n\n    this.modal.style.pointerEvents = 'none'\n    this.modal.style.visibility = 'hidden'\n    this.$input.classList.remove(OPEN_CLASS)\n    this.$input.focus()\n\n    this.isOpen = false\n\n    this.dispatch('closeModal', {\n      input: this.$input,\n      modal: this.modal,\n      floatsam: this,\n      options: this.options,\n    })\n  }\n  ////////////////////////////////////////////////////\n  // key event checker - the key event triggers\n  ////////////////////////////////////////////////////\n\n  checkKey(e) {\n    if (e.keyCode == '38') {\n      // up arrowspot\n      this.selectPrev()\n    } else if (e.keyCode == '40') {\n      // down arrow\n      this.selectNext()\n    } else if (e.keyCode == '37') {\n      // left arrow\n    } else if (e.keyCode == '39') {\n      // right arrow\n    } else if (e.keyCode == '27') {\n      // escape\n      e.preventDefault()\n      this.closeModal()\n    } else if (e.keyCode == '9') {\n      // tab\n      e.preventDefault()\n      this.closeModal()\n    } else if (e.keyCode == '13') {\n      // enter\n      e.preventDefault()\n      this.closeModal()\n      this.$input.closest('form').submit()\n    }\n  }\n\n  ////////////////////////////////////////////////////\n  // visual selection of the items on the modal\n  ////////////////////////////////////////////////////\n  selectItem() {\n    const items = [...this.list.querySelectorAll('li')]\n    console.log(this.currentSelected)\n    items.forEach((item, index) => {\n      if (index === this.currentSelected) {\n        item.classList.add('selected-item')\n        if (this.inputPreview) {\n          this.setInput(item.textContent)\n        }\n\n        // !!EVENT!! on select key\n        this.dispatch('selectKey', {\n          selected: item.textContent,\n          input: this.$input,\n          modal: this.modal,\n          floatsam: this,\n          options: this.options,\n        })\n      } else {\n        item.classList.remove('selected-item')\n      }\n    })\n  }\n\n  selectNext() {\n    if (this.currentSelected === null) {\n      this.currentSelected = 0\n    } else {\n      this.currentSelected = this.currentSelected + 1\n    }\n    this.selectItem()\n  }\n\n  selectPrev() {\n    this.currentSelected = this.currentSelected - 1\n    this.selectItem()\n  }\n\n  ////////////////////////////////////////////////////\n  // render function for the list\n  // - runs on every data fetch\n  ////////////////////////////////////////////////////\n  generateListItems() {\n    let list = ``\n\n    if (!this.data) {\n      console.warn('no data!!!', this.value)\n      return\n    }\n\n    const filteredData = this.data.filter((item) => {\n      console.log(this.value)\n      if (item.toLowerCase().includes(this.value.toLowerCase())) {\n        return item\n      }\n    })\n\n    filteredData.forEach((item) => {\n      const regex = new RegExp(this.value, 'gi')\n      const response = item.replace(regex, (str) => {\n        return \"<span style='background-color: yellow;'>\" + str + '</span>'\n      })\n      list = list + `<li role=\"option\">${response}</li>`\n    })\n\n    // append list to the screen\n    this.list.innerHTML = list\n\n    // now that list is on DOM add event listeners\n    const listItems = [...this.list.querySelectorAll('li')]\n    listItems.forEach((item) => {\n      item.addEventListener('click', () => {\n        this.setInput(item.textContent)\n        this.closeModal()\n      })\n    })\n  }\n\n  ////////////////////////////////////////////////////\n  // visually set input value (optionally triggered)\n  ////////////////////////////////////////////////////\n  setInput(textValue) {\n    this.$input.value = textValue\n  }\n\n  ////////////////////////////////////////////////////\n  // public triggers - USERS SHOULD ONLY USE THESE\n  ////////////////////////////////////////////////////\n  triggerClose() {\n    this.closeModal()\n  }\n\n  triggerDisable() {\n    this.isDisabled = true\n    this.closeModal()\n    this.dispatch('disabled', {\n      input: this.$input,\n      modal: this.modal,\n      floatsam: this,\n      options: this.options,\n    })\n  }\n\n  triggerEnable() {\n    this.isDisabled = false\n  }\n\n  ////////////////////////////////////////////////////\n  // utils\n  ////////////////////////////////////////////////////\n  minCharsExcceded() {\n    if (this.value.length >= this.minChars) {\n      return true\n    } else {\n      return false\n    }\n  }\n\n  ////////////////////////////////////////////////////\n  // init fn - run on singleton creation\n  ////////////////////////////////////////////////////\n  init() {\n    this._self = this\n    this.currentSelected = null\n    this.isDisabled = false\n\n    this.setUp()\n    // inject the modal onto the page and get an instance of it\n    this.initModal()\n\n    // add listener to onInput of input\n    this.initInputCheck()\n\n    alert('kyletest!!!')\n\n    this.dispatch('init', {\n      input: this.$input,\n      modal: this.modal,\n      floatsam: this,\n      options: this.options,\n    })\n  }\n}\n\nexport default floatsam\n"],"names":["DispatcherEvent","eventName","this","callbacks","floatsam","registerCallback","callback","push","unregisterCallback","index","indexOf","splice","fire","data","slice","forEach","options","alert","events","$input","el","minChars","isOpen","isListEmpty","isFocused","inputPreview","onAjax","init","dispatch","event","_proto2","on","off","length","setUp","setAttribute","initModal","insertAdjacentHTML","modal","document","querySelector","list","style","pointerEvents","visibility","initInputCheck","isDisabled","addEventListener","e","_this","value","target","input","then","result","update","closeModal","console","log","generateListItems","openModal","preventSubmit","preventDefault","checkKey","bind","classList","add","OPEN_CLASS","innerHTML","currentSelected","removeEventListener","remove","focus","keyCode","selectPrev","selectNext","closest","submit","selectItem","_this2","items","concat","querySelectorAll","item","setInput","textContent","selected","_this3","filter","toLowerCase","includes","regex","RegExp","response","replace","str","warn","textValue","triggerClose","triggerDisable","triggerEnable","minCharsExcceded","_self"],"mappings":"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"}