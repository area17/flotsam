{"version":3,"file":"flotsam.umd.js","sources":["../src/DispatcherEvent.js","../src/index.js","../src/EventComponent.js"],"sourcesContent":["// helper class to run event busing\nclass DispatcherEvent {\n    constructor(eventName) {\n        this.eventName = eventName\n        this.callbacks = []\n    }\n\n    registerCallback(callback) {\n        this.callbacks.push(callback)\n    }\n\n    unregisterCallback(callback) {\n        const index = this.callbacks.indexOf(callback)\n        if (index > -1) {\n            this.callbacks.splice(index, 1)\n        }\n    }\n\n    fire(data) {\n        const callbacks = this.callbacks.slice(0)\n        callbacks.forEach((callback) => {\n            callback(data)\n        })\n    }\n}\n\nexport default DispatcherEvent\n","import EventComponent from './EventComponent'\nimport './styles.css'\n\nconst OPEN_CLASS = 'is-open'\n\nclass flotsam extends EventComponent {\n    ////////////////////////////////////////////////////\n    // construct\n    ////////////////////////////////////////////////////\n    constructor(options) {\n        // class inheritance setup\n        // adding core events module\n        super()\n\n        // for debugging\n        this.options = options\n\n        this.$input = options.el\n        this.data = options.data ? options.data : false\n        this.minChars = options.minChars ? options.minChars : 2\n        this.inputPreview = typeof(options.inputPreview) === 'boolean' ? options.inputPreview : true\n        this.onAjax = typeof(options.onAjax) === 'function' ? options.onAjax : null\n\n        this.hint = options.hint\n            ? options.hint\n            : 'When autocomplete results are available, use up and down arrows to review and enter to select. Touch device users, explore by touch or with swipe gestures.'\n\n        this.noResultsText = options.noResultsText\n            ? options.noResultsText\n            : 'Sorry there are no results for ::term:: please search again.'\n\n        this.isEmpty = true\n        this.hasEmptyState = true\n\n        // native state\n        this.isOpen = false\n\n        this.init()\n    }\n\n    ////////////////////////////////////////////////////\n    // inits\n    ////////////////////////////////////////////////////\n\n    // setup has some housekeeping of inputs and attrs to increase quality of life\n    setUp() {\n        // add autocomplete off to input to not get in the way of dropdown\n        this.$input.setAttribute('autocomplete', 'off')\n        this.$input.setAttribute('aria-expanded', 'false')\n        this.$input.setAttribute('aria-haspopup', 'listbox')\n        this.$input.setAttribute('role', 'combobox')\n        this.$input.setAttribute('aria-autocomplete', 'list')\n        this.$input.setAttribute('aria-owns', `modal-${this.uid}-list`)\n        this.$input.id = `flotsam-input-${this.uid}`\n        this.$input.setAttribute(\n            'aria-describedby',\n            `assistiveHint-${this.uid}`\n        )\n    }\n\n    initModal() {\n        // append modal to the page\n        this.$input.insertAdjacentHTML('afterend', this.generateModal())\n        this.$input.insertAdjacentHTML('afterend', this.generateAssistiveHint())\n        this.$input.insertAdjacentHTML('afterend', this.generateStatus())\n\n        // grab an instance of elems to use later\n        this.$modal = document.querySelector(`#modal-${this.uid}`)\n        this.$status = document.querySelector(`#status-${this.uid}`)\n        this.list = this.$modal.querySelector('.flotsam-modal__list')\n        this.$empty = this.$modal.querySelector('.flotsam-modal__empty')\n\n        // intial modal styles\n        this.$modal.style.pointerEvents = 'none'\n        this.$modal.style.visibility = 'hidden'\n    }\n\n    initInputCheck() {\n        if (this.isDisabled) return\n\n        // if we want to use ajax we build a promise to get data\n        if (this.onAjax) {\n            this.$input.addEventListener('input', (e) => {\n                this.value = e.target.value\n\n                if (this.minCharsExcceded()) {\n                    super.dispatch('loadingData', {\n                        input: this.$input,\n                        modal: this.$modal,\n                        flotsam: this,\n                        options: this.options,\n                    })\n                    this.onAjax(this.value).then((result) => {\n                        this.data = result\n\n                        super.dispatch('loadedData', {\n                            input: this.$input,\n                            modal: this.$modal,\n                            flotsam: this,\n                            options: this.options,\n                        })\n\n                        this.update()\n                    })\n                } else if (this.isOpen) {\n                    this.closeModal()\n                }\n            })\n        } else {\n            // else if we have static data lets just use that\n            this.$input.addEventListener('input', (e) => {\n                this.value = e.target.value\n                if (this.minCharsExcceded()) {\n                    this.update()\n                } else if (this.isOpen) {\n                    this.closeModal()\n                }\n            })\n        }\n    }\n\n    ////////////////////////////////////////////////////\n    // init assisitve hint\n    ////////////////////////////////////////////////////\n\n    generateAssistiveHint() {\n        return `\n            <div id=\"assistiveHint-${this.uid}\" class=\"flotsam-modal__hint\">\n                ${this.hint}\n            </div>\n        `\n    }\n\n    generateStatus() {\n        return `\n            <div id=\"status-${this.uid}\" aria-role='status' aria-live=\"polite\" class=\"flotsam-modal__status\">\n                \n            </div>\n        `\n    }\n\n    update() {\n        // filter the data\n        if (this.data.length !== 0) {\n            this.data = this.data.filter((item) => {\n                if (item.toLowerCase().includes(this.value.toLowerCase())) {\n                    return item\n                }\n            })\n        }\n\n        if (this.data.length === 0) {\n            this.showEmptyState()\n        } else {\n            // we have items remove the empty state\n            this.hideEmptyState()\n            this.generateListItems()\n\n            // this only triggers once then sets the modal to open state\n            if (this.isOpen === false) {\n                this.openModal()\n            }\n        }\n    }\n\n    preventSubmit(e) {\n        e.preventDefault()\n    }\n\n    showEmptyState() {\n        this.removeListItems()\n        const str = this.noResultsText.replace('::term::', `<strong>\"${this.value}\"</strong>`)\n        const emptyHtml = `<div>${str}</div>`\n        this.$empty.innerHTML = emptyHtml\n        this.$empty.style.display = 'block'\n\n        if (!this.isOpen) {\n            this.openModal()\n        }\n    }\n\n    hideEmptyState() {\n        this.$empty.innerHTML = ''\n        this.$empty.style.display = 'none'\n    }\n\n    ////////////////////////////////////////////////////\n    // hide and show modal\n    // bread and butter functions all event setup\n    // and breakdown here\n    ////////////////////////////////////////////////////\n    openModal() {\n        if (this.isDisabled) return\n\n        document.addEventListener('submit', this.preventSubmit)\n\n        // this way lets us cleanly breakdown this event listener later\n        this.checkKey = this.checkKey.bind(this)\n        document.addEventListener('keydown', this.checkKey, true)\n        this.isOpen = true\n\n        // styles and classes\n        this.$modal.style.pointerEvents = 'auto'\n        this.$modal.style.visibility = 'visible'\n        this.$input.classList.add(OPEN_CLASS)\n        this.$input.setAttribute('aria-expanded', 'true')\n\n        super.dispatch('openModal', {\n            input: this.$input,\n            modal: this.$modal,\n            flotsam: this,\n            options: this.options,\n        })\n    }\n\n    closeModal() {\n        // clean up the modal containers\n        this.hideEmptyState()\n        this.removeListItems()\n        this.unsetSelected()\n\n        if (this.isOpen) {\n            document.removeEventListener('submit', this.preventSubmit)\n            document.removeEventListener('keydown', this.checkKey, true)\n        }\n\n        this.$modal.style.pointerEvents = 'none'\n        this.$modal.style.visibility = 'hidden'\n        this.$input.classList.remove(OPEN_CLASS)\n        this.$input.focus()\n\n        this.isOpen = false\n\n        super.dispatch('closeModal', {\n            input: this.$input,\n            modal: this.$modal,\n            flotsam: this,\n            options: this.options,\n        })\n    }\n    ////////////////////////////////////////////////////\n    // key event checker - the key event triggers\n    ////////////////////////////////////////////////////\n\n    checkKey(e) {\n        if (e.keyCode == '38') {\n            // up arrowspot\n            this.selectPrev()\n        } else if (e.keyCode == '40') {\n            // down arrow\n            this.selectNext()\n        } else if (e.keyCode == '37') {\n            // left arrow\n        } else if (e.keyCode == '39') {\n            // right arrow\n        } else if (e.keyCode == '27') {\n            // escape\n            e.preventDefault()\n            this.closeModal()\n        } else if (e.keyCode == '9') {\n            // tab\n            e.preventDefault()\n            this.closeModal()\n        } else if (e.keyCode == '13') {\n            // enter\n            e.preventDefault()\n            this.closeModal()\n            this.$input.closest('form').submit()\n        }\n    }\n\n    ////////////////////////////////////////////////////\n    // visual selection of the items on the modal\n    ////////////////////////////////////////////////////\n    selectItem() {\n        const items = [...this.list.querySelectorAll('li')]\n        items.forEach((item, index) => {\n            if (index === this.currentSelected) {\n                item.classList.add('flotsam-modal__selected-item')\n\n                // a11y features\n                item.setAttribute('aria-selected', 'true')\n                this.$input.setAttribute('aria-activedescendant', item.id)\n\n                // if prevew is on show the selected in the input box\n                if (this.inputPreview) {\n                    this.setInput(item.innerText)\n                }\n\n                // !!EVENT!! on select key\n                super.dispatch('selectKey', {\n                    selected: item.textContent,\n                    input: this.$input,\n                    modal: this.$modal,\n                    flotsam: this,\n                    options: this.options,\n                })\n            } else {\n                item.classList.remove('flotsam-modal__selected-item')\n                item.setAttribute('aria-selected', 'false')\n            }\n        })\n    }\n\n    selectNext() {\n        if (this.currentSelected === null) {\n            this.currentSelected = 0\n        } else {\n            this.currentSelected = this.currentSelected + 1\n        }\n\n        this.selectItem()\n    }\n\n    selectPrev() {\n        this.currentSelected = this.currentSelected - 1\n        this.selectItem()\n    }\n\n    unsetSelected() {\n        // unset selected\n        this.currentSelected = null\n        const items = [...this.list.querySelectorAll('li')]\n\n        // a11y feature\n        this.$input.removeAttribute('aria-activedescendant')\n\n        items.forEach((item) => {\n            item.classList.remove('flotsam-modal__selected-item')\n        })\n    }\n\n    generateModal() {\n        return `\n        <div class=\"flotsam-modal\" id=\"modal-${this.uid}\" >\n            <div class=\"flotsam-modal__inner\">\n                <ul \n                    class=\"flotsam-modal__list\"\n                    role=\"listbox\" \n                    id=\"modal-${this.uid}-list\">\n                </ul>\n                <div class=\"flotsam-modal__empty\" style=\"display: none\"></div>\n            </div>\n        </div>\n    `\n    }\n\n    generateListItems() {\n        // clean up the dropdown of selects\n        this.unsetSelected()\n\n        let list = ``\n\n        this.data.forEach((item, index) => {\n            const regex = new RegExp(this.value, 'gi')\n            const response = item.replace(regex, (str) => {\n                return (\n                    `<span class=\"flotsam-modal__list-highlight\">` +\n                    str +\n                    '</span>'\n                )\n            })\n            const posIndex = index + 1\n            list += `\n                <li class=\"flotsam-modal__list-item\" role=\"option\" aria-posinset=\"${posIndex}\" aria-setsize=\"${this.data.length}\" aria-selected=\"false\" id=\"list-item-${index}--${this.uid}\" tab-index=\"-1\">\n                    ${response}\n                </li>`\n        })\n\n        // append list to the screen\n        this.list.innerHTML = list\n\n        // now that list is on DOM add event listeners\n        const listItems = [...this.list.querySelectorAll('li')]\n        listItems.forEach((item) => {\n            item.addEventListener('click', () => {\n                this.setInput(item.innerText)\n                this.closeModal()\n            })\n        })\n    }\n\n    // quick way to breka down list\n    removeListItems() {\n        this.list.innerHTML = ''\n    }\n\n    ////////////////////////////////////////////////////\n    // visually set input value (optionally triggered)\n    ////////////////////////////////////////////////////\n    setInput(textValue) {\n        this.$input.value = textValue\n    }\n\n    ////////////////////////////////////////////////////\n    // public triggers - USERS SHOULD ONLY USE THESE\n    ////////////////////////////////////////////////////\n    triggerClose() {\n        this.closeModal()\n    }\n\n    triggerDisable() {\n        this.isDisabled = true\n        this.closeModal()\n        super.dispatch('disabled', {\n            input: this.$input,\n            modal: this.$modal,\n            flotsam: this,\n            options: this.options,\n        })\n    }\n\n    triggerEnable() {\n        this.isDisabled = false\n    }\n\n    ////////////////////////////////////////////////////\n    // utils\n    ////////////////////////////////////////////////////\n    minCharsExcceded() {\n        if (this.value.length >= this.minChars) {\n            return true\n        } else {\n            return false\n        }\n    }\n\n    ////////////////////////////////////////////////////\n    // init fn - run on singleton creation\n    ////////////////////////////////////////////////////\n    init() {\n        this._self = this // so we can remove event listeners cleanly\n\n        // state\n        this.currentSelected = null\n        this.isDisabled = false\n\n        if (!this.data && !this.onAjax) {\n            this.isDisabled = true\n            console.error('flotsam: no data specified', this)\n            return\n        }\n\n        this.setUp()\n        // inject the modal onto the page and get an instance of it\n        this.initModal()\n\n        // add listener to onInput of input\n        this.initInputCheck()\n\n        // bug not triggering right away, so set it to next cycle\n        setTimeout(() => {\n            super.dispatch('init', {\n                input: this.$input,\n                modal: this.$modal,\n                flotsam: this,\n                options: this.options,\n            })\n        }, 0)\n    }\n}\n\nexport default flotsam\n","import DispatcherEvent from './DispatcherEvent'\n\nclass EventComponent {\n    ////////////////////////////////////////////////////\n    // construct\n    ////////////////////////////////////////////////////\n    constructor() {\n        this.events = {}\n        this.uid = Math.floor(1000 + Math.random() * 90000)\n    }\n\n    ////////////////////////////////////////////////////\n    // event trigger and listeners\n    ////////////////////////////////////////////////////\n    dispatch(eventName, data) {\n        const event = this.events[eventName]\n        if (event) {\n            event.fire(data)\n        }\n    }\n\n    on(eventName, callback) {\n        let event = this.events[eventName]\n        if (!event) {\n            event = new DispatcherEvent(eventName)\n            this.events[eventName] = event\n        }\n        event.registerCallback(callback)\n    }\n\n    off(eventName, callback) {\n        const event = this.events[eventName]\n        if (event && event.callbacks.indexOf(callback) > -1) {\n            event.unregisterCallback(callback)\n            if (event.callbacks.length === 0) {\n                delete this.events[eventName]\n            }\n        }\n    }\n}\n\nexport default EventComponent\n"],"names":["DispatcherEvent","eventName","this","callbacks","_proto","prototype","registerCallback","callback","push","unregisterCallback","index","indexOf","splice","fire","data","slice","forEach","OPEN_CLASS","_EventComponent","options","_this","$input","el","minChars","inputPreview","onAjax","hint","noResultsText","isEmpty","hasEmptyState","isOpen","init","flotsam","EventComponent","setUp","setAttribute","uid","id","initModal","insertAdjacentHTML","generateModal","generateAssistiveHint","generateStatus","$modal","document","querySelector","$status","list","$empty","style","pointerEvents","visibility","initInputCheck","_this2","isDisabled","addEventListener","e","value","target","minCharsExcceded","dispatch","call","input","modal","then","result","update","closeModal","_this3","length","filter","item","toLowerCase","includes","showEmptyState","hideEmptyState","generateListItems","openModal","preventSubmit","preventDefault","removeListItems","replace","innerHTML","str","display","checkKey","bind","classList","add","unsetSelected","removeEventListener","remove","focus","keyCode","selectPrev","selectNext","closest","submit","selectItem","concat","querySelectorAll","_this4","currentSelected","setInput","innerText","selected","textContent","items","removeAttribute","_this5","regex","RegExp","response","textValue","triggerClose","triggerDisable","triggerEnable","_this6","_self","console","error","setTimeout","events","Math","floor","random","event","on","off"],"mappings":"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"}