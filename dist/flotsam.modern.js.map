{"version":3,"file":"flotsam.modern.js","sources":["../src/index.js"],"sourcesContent":["const modal = () => {\n  return `\n        <div class=\"autocomplete-modal testing......\">\n            <div class=\"autocomplete-modal__inner\">\n                <ul class=\"autocomplete-modal__list\" role=\"combobox\">\n                </ul>\n            </div>\n        </div>\n    `\n}\n\nconst OPEN_CLASS = 'is-open'\n\n// helper class to run event busing\nclass DispatcherEvent {\n  constructor(eventName) {\n    this.eventName = eventName\n    this.callbacks = []\n  }\n\n  registerCallback(callback) {\n    this.callbacks.push(callback)\n  }\n\n  unregisterCallback(callback) {\n    const index = this.callbacks.indexOf(callback)\n    if (index > -1) {\n      this.callbacks.splice(index, 1)\n    }\n  }\n\n  fire(data) {\n    const callbacks = this.callbacks.slice(0)\n    callbacks.forEach((callback) => {\n      callback(data)\n    })\n  }\n}\n\nclass floatsam {\n  ////////////////////////////////////////////////////\n  // construct\n  ////////////////////////////////////////////////////\n  constructor(options) {\n    alert('dd')\n    this.events = {}\n\n    // for debugging\n    this.options = options\n\n    this.$input = options.el\n    this.data = options.data ? options.data : false\n    this.minChars = options.minChars ? options.minChars : 2\n    this.isOpen = false\n    this.isListEmpty = true\n    this.isFocused = false\n    this.inputPreview = true\n    this.onAjax = options.onAjax\n    this.init()\n  }\n\n  ////////////////////////////////////////////////////\n  // event trigger and listeners\n  ////////////////////////////////////////////////////\n  dispatch(eventName, data) {\n    const event = this.events[eventName]\n    if (event) {\n      event.fire(data)\n    }\n  }\n\n  on(eventName, callback) {\n    let event = this.events[eventName]\n    if (!event) {\n      event = new DispatcherEvent(eventName)\n      this.events[eventName] = event\n    }\n    event.registerCallback(callback)\n  }\n\n  off(eventName, callback) {\n    const event = this.events[eventName]\n    if (event && event.callbacks.indexOf(callback) > -1) {\n      event.unregisterCallback(callback)\n      if (event.callbacks.length === 0) {\n        delete this.events[eventName]\n      }\n    }\n  }\n\n  ////////////////////////////////////////////////////\n  // inits\n  ////////////////////////////////////////////////////\n\n  // setup has some housekeeping of inputs and attrs to increase quality of life\n  setUp() {\n    // add autocomplete off to input to not get in the way of dropdown\n    this.$input.setAttribute('autocomplete', 'off')\n  }\n\n  initModal() {\n    // append modal to the page\n    this.$input.insertAdjacentHTML('afterend', modal())\n\n    // grab an instance of it to use later\n    this.modal = document.querySelector('.autocomplete-modal')\n    this.list = this.modal.querySelector('.autocomplete-modal__list')\n\n    // intial modal styles\n    this.modal.style.pointerEvents = 'none'\n    this.modal.style.visibility = 'hidden'\n  }\n\n  initInputCheck() {\n    // check the input\n\n    if (this.isDisabled) return\n\n    // if we want to use ajax we build a promise to get data\n    if (this.onAjax) {\n      this.$input.addEventListener('input', (e) => {\n        this.value = e.target.value\n\n        if (this.value.length >= this.minChars) {\n          this.dispatch('loadingData', {\n            input: this.$input,\n            modal: this.modal,\n            floatsam: this,\n            options: this.options,\n          })\n          this.onAjax(this.value).then((result) => {\n            this.data = result\n\n            this.dispatch('loadedData', {\n              input: this.$input,\n              modal: this.modal,\n              floatsam: this,\n              options: this.options,\n            })\n\n            this.update()\n          })\n        } else {\n          this.closeModal()\n        }\n      })\n    } else {\n      this.$input.addEventListener('input', (e) => {\n        this.value = e.target.value\n        if (this.value.length >= this.minChars) {\n          this.update()\n        }\n      })\n    }\n  }\n\n  update() {\n    // do all data updates here\n\n    // grab a copy of the current list so we can do some minipulation\n\n    if (this.data) {\n      console.log(this.value)\n      this.generateListItems()\n\n      // this only triggers once then sets the modal to open state\n      if (this.isOpen === false) {\n        this.openModal()\n      }\n    } else {\n      this.closeModal()\n    }\n  }\n\n  preventSubmit(e) {\n    e.preventDefault()\n  }\n\n  ////////////////////////////////////////////////////\n  // hide and show modal\n  // bread and butter functions all event setup\n  // and breakdown here\n  ////////////////////////////////////////////////////\n  openModal() {\n    if (this.isDisabled) return\n\n    document.addEventListener('submit', this.preventSubmit)\n    console.log('adding keydown')\n    this.checkKey = this.checkKey.bind(this)\n    document.addEventListener('keydown', this.checkKey, true)\n\n    // styles and classes\n    this.modal.style.pointerEvents = 'auto'\n    this.modal.style.visibility = 'visible'\n    this.$input.classList.add(OPEN_CLASS)\n\n    this.isOpen = true\n\n    this.dispatch('openModal', {\n      input: this.$input,\n      modal: this.modal,\n      floatsam: this,\n      options: this.options,\n    })\n  }\n\n  closeModal() {\n    console.log('close list')\n    this.list.innerHTML = ''\n    this.currentSelected = null\n    if (this.isOpen) {\n      document.removeEventListener('submit', this.preventSubmit)\n      console.log('removing keydown')\n      document.removeEventListener('keydown', this.checkKey, true)\n    }\n\n    this.modal.style.pointerEvents = 'none'\n    this.modal.style.visibility = 'hidden'\n    this.$input.classList.remove(OPEN_CLASS)\n    this.$input.focus()\n\n    this.isOpen = false\n\n    this.dispatch('closeModal', {\n      input: this.$input,\n      modal: this.modal,\n      floatsam: this,\n      options: this.options,\n    })\n  }\n  ////////////////////////////////////////////////////\n  // key event checker - the key event triggers\n  ////////////////////////////////////////////////////\n\n  checkKey(e) {\n    if (e.keyCode == '38') {\n      // up arrowspot\n      this.selectPrev()\n    } else if (e.keyCode == '40') {\n      // down arrow\n      this.selectNext()\n    } else if (e.keyCode == '37') {\n      // left arrow\n    } else if (e.keyCode == '39') {\n      // right arrow\n    } else if (e.keyCode == '27') {\n      // escape\n      e.preventDefault()\n      this.closeModal()\n    } else if (e.keyCode == '9') {\n      // tab\n      e.preventDefault()\n      this.closeModal()\n    } else if (e.keyCode == '13') {\n      // enter\n      e.preventDefault()\n      this.closeModal()\n      this.$input.closest('form').submit()\n    }\n  }\n\n  ////////////////////////////////////////////////////\n  // visual selection of the items on the modal\n  ////////////////////////////////////////////////////\n  selectItem() {\n    const items = [...this.list.querySelectorAll('li')]\n    console.log(this.currentSelected)\n    items.forEach((item, index) => {\n      if (index === this.currentSelected) {\n        item.classList.add('selected-item')\n        if (this.inputPreview) {\n          this.setInput(item.textContent)\n        }\n\n        // !!EVENT!! on select key\n        this.dispatch('selectKey', {\n          selected: item.textContent,\n          input: this.$input,\n          modal: this.modal,\n          floatsam: this,\n          options: this.options,\n        })\n      } else {\n        item.classList.remove('selected-item')\n      }\n    })\n  }\n\n  selectNext() {\n    if (this.currentSelected === null) {\n      this.currentSelected = 0\n    } else {\n      this.currentSelected = this.currentSelected + 1\n    }\n    this.selectItem()\n  }\n\n  selectPrev() {\n    this.currentSelected = this.currentSelected - 1\n    this.selectItem()\n  }\n\n  ////////////////////////////////////////////////////\n  // render function for the list\n  // - runs on every data fetch\n  ////////////////////////////////////////////////////\n  generateListItems() {\n    let list = ``\n\n    if (!this.data) {\n      console.warn('no data!!!', this.value)\n      return\n    }\n\n    const filteredData = this.data.filter((item) => {\n      console.log(this.value)\n      if (item.toLowerCase().includes(this.value.toLowerCase())) {\n        return item\n      }\n    })\n\n    filteredData.forEach((item) => {\n      const regex = new RegExp(this.value, 'gi')\n      const response = item.replace(regex, (str) => {\n        return \"<span style='background-color: yellow;'>\" + str + '</span>'\n      })\n      list = list + `<li role=\"option\">${response}</li>`\n    })\n\n    // append list to the screen\n    this.list.innerHTML = list\n\n    // now that list is on DOM add event listeners\n    const listItems = [...this.list.querySelectorAll('li')]\n    listItems.forEach((item) => {\n      item.addEventListener('click', () => {\n        this.setInput(item.textContent)\n        this.closeModal()\n      })\n    })\n  }\n\n  ////////////////////////////////////////////////////\n  // visually set input value (optionally triggered)\n  ////////////////////////////////////////////////////\n  setInput(textValue) {\n    this.$input.value = textValue\n  }\n\n  ////////////////////////////////////////////////////\n  // public triggers - USERS SHOULD ONLY USE THESE\n  ////////////////////////////////////////////////////\n  triggerClose() {\n    this.closeModal()\n  }\n\n  triggerDisable() {\n    this.isDisabled = true\n    this.closeModal()\n    this.dispatch('disabled', {\n      input: this.$input,\n      modal: this.modal,\n      floatsam: this,\n      options: this.options,\n    })\n  }\n\n  triggerEnable() {\n    this.isDisabled = false\n  }\n\n  ////////////////////////////////////////////////////\n  // utils\n  ////////////////////////////////////////////////////\n  minCharsExcceded() {\n    if (this.value.length >= this.minChars) {\n      return true\n    } else {\n      return false\n    }\n  }\n\n  ////////////////////////////////////////////////////\n  // init fn - run on singleton creation\n  ////////////////////////////////////////////////////\n  init() {\n    this._self = this\n    this.currentSelected = null\n    this.isDisabled = false\n\n    this.setUp()\n    // inject the modal onto the page and get an instance of it\n    this.initModal()\n\n    // add listener to onInput of input\n    this.initInputCheck()\n\n    alert('kyletest!!!')\n\n    this.dispatch('init', {\n      input: this.$input,\n      modal: this.modal,\n      floatsam: this,\n      options: this.options,\n    })\n  }\n}\n\nexport default floatsam\n"],"names":["OPEN_CLASS","DispatcherEvent","constructor","eventName","this","callbacks","registerCallback","callback","push","unregisterCallback","indexOf","index","splice","fire","data","slice","forEach","floatsam","options","alert","events","$input","el","minChars","isOpen","isListEmpty","isFocused","inputPreview","onAjax","init","dispatch","event","on","off","length","setUp","setAttribute","initModal","insertAdjacentHTML","modal","document","querySelector","list","style","pointerEvents","visibility","initInputCheck","isDisabled","addEventListener","e","value","target","input","then","result","update","closeModal","console","log","generateListItems","openModal","preventSubmit","preventDefault","checkKey","bind","classList","add","innerHTML","currentSelected","removeEventListener","remove","focus","keyCode","selectPrev","selectNext","closest","submit","selectItem","querySelectorAll","items","item","setInput","textContent","selected","filter","toLowerCase","includes","response","replace","regex","str","warn","textValue","triggerClose","triggerDisable","triggerEnable","minCharsExcceded","_self"],"mappings":"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"}