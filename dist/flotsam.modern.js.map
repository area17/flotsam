{"version":3,"file":"flotsam.modern.js","sources":["../src/DispatcherEvent.js","../src/EventComponent.js","../src/index.js"],"sourcesContent":["// helper class to run event busing\nclass DispatcherEvent {\n    constructor(eventName) {\n        this.eventName = eventName\n        this.callbacks = []\n    }\n\n    registerCallback(callback) {\n        this.callbacks.push(callback)\n    }\n\n    unregisterCallback(callback) {\n        const index = this.callbacks.indexOf(callback)\n        if (index > -1) {\n            this.callbacks.splice(index, 1)\n        }\n    }\n\n    fire(data) {\n        const callbacks = this.callbacks.slice(0)\n        callbacks.forEach((callback) => {\n            callback(data)\n        })\n    }\n}\n\nexport default DispatcherEvent\n","import DispatcherEvent from './DispatcherEvent'\n\nclass EventComponent {\n    ////////////////////////////////////////////////////\n    // construct\n    ////////////////////////////////////////////////////\n    constructor() {\n        this.events = {}\n        this.uid = Math.floor(1000 + Math.random() * 90000)\n    }\n\n    ////////////////////////////////////////////////////\n    // event trigger and listeners\n    ////////////////////////////////////////////////////\n    dispatch(eventName, data) {\n        const event = this.events[eventName]\n        if (event) {\n            event.fire(data)\n        }\n    }\n\n    on(eventName, callback) {\n        let event = this.events[eventName]\n        if (!event) {\n            event = new DispatcherEvent(eventName)\n            this.events[eventName] = event\n        }\n        event.registerCallback(callback)\n    }\n\n    off(eventName, callback) {\n        const event = this.events[eventName]\n        if (event && event.callbacks.indexOf(callback) > -1) {\n            event.unregisterCallback(callback)\n            if (event.callbacks.length === 0) {\n                delete this.events[eventName]\n            }\n        }\n    }\n}\n\nexport default EventComponent\n","import EventComponent from './EventComponent'\nimport './styles.css'\n\nconst OPEN_CLASS = 'is-open'\n\nclass flotsam extends EventComponent {\n    ////////////////////////////////////////////////////\n    // construct\n    ////////////////////////////////////////////////////\n    constructor(options) {\n        // class inheritance setup\n        // adding core events module\n        super()\n\n        // for debugging\n        this.options = options\n\n        this.$input = options.el\n        this.data = options.data ? options.data : false\n        this.minChars = options.minChars ? options.minChars : 2\n        this.inputPreview = options.inputPreview ? options.inputPreview : true\n        this.onAjax = options.onAjax\n\n        this.hint = options.hint\n            ? options.hint\n            : 'When autocomplete results are available use up and down arrows to review and enter to select.'\n\n        this.isEmpty = true\n        this.hasEmptyState = true\n\n        // native state\n        this.isOpen = false\n\n        this.init()\n    }\n\n    ////////////////////////////////////////////////////\n    // inits\n    ////////////////////////////////////////////////////\n\n    // setup has some housekeeping of inputs and attrs to increase quality of life\n    setUp() {\n        // add autocomplete off to input to not get in the way of dropdown\n        this.$input.setAttribute('autocomplete', 'off')\n        this.$input.setAttribute('aria-expanded', 'false')\n        this.$input.setAttribute('aria-haspopup', 'listbox')\n        this.$input.setAttribute('role', 'combobox')\n        this.$input.setAttribute('aria-autocomplete', 'list')\n        this.$input.setAttribute('aria-owns', `modal-${this.uid}-list`)\n        this.$input.id = `autocomplete-input-${this.uid}`\n        this.$input.setAttribute(\n            'aria-describedby',\n            `assistiveHint-${this.uid}`\n        )\n    }\n\n    initModal() {\n        // append modal to the page\n        this.$input.insertAdjacentHTML('afterend', this.generateModal())\n        this.$input.insertAdjacentHTML('afterend', this.generateAssistiveHint())\n        this.$input.insertAdjacentHTML('afterend', this.generateStatus())\n\n        // grab an instance of elems to use later\n        this.$modal = document.querySelector(`#modal-${this.uid}`)\n        this.$status = document.querySelector(`#status-${this.uid}`)\n        this.list = this.$modal.querySelector('.autocomplete-modal__list')\n        this.$empty = this.$modal.querySelector('.autocomplete-modal__empty')\n\n        // intial modal styles\n        this.$modal.style.pointerEvents = 'none'\n        this.$modal.style.visibility = 'hidden'\n    }\n\n    initInputCheck() {\n        if (this.isDisabled) return\n\n        // if we want to use ajax we build a promise to get data\n        if (this.onAjax) {\n            this.$input.addEventListener('input', (e) => {\n                this.value = e.target.value\n\n                if (this.minCharsExcceded()) {\n                    super.dispatch('loadingData', {\n                        input: this.$input,\n                        modal: this.$modal,\n                        flotsam: this,\n                        options: this.options,\n                    })\n                    this.onAjax(this.value).then((result) => {\n                        this.data = result\n\n                        super.dispatch('loadedData', {\n                            input: this.$input,\n                            modal: this.$modal,\n                            flotsam: this,\n                            options: this.options,\n                        })\n\n                        this.update()\n                    })\n                } else if (this.isOpen) {\n                    this.closeModal()\n                }\n            })\n        } else {\n            // else if we have static data lets just use that\n            this.$input.addEventListener('input', (e) => {\n                this.value = e.target.value\n                if (this.minCharsExcceded()) {\n                    this.update()\n                } else if (this.isOpen) {\n                    this.closeModal()\n                }\n            })\n        }\n    }\n\n    ////////////////////////////////////////////////////\n    // init assisitve hint\n    ////////////////////////////////////////////////////\n\n    generateAssistiveHint() {\n        return `\n            <div id=\"assistiveHint-${this.uid}\" style=\"display: none\">\n                ${this.hint}\n            </div>\n        `\n    }\n\n    generateStatus() {\n        return `\n            <div id=\"status-${this.uid}\" aria-role='status' aria-live=\"polite\" style=\"display: none\">\n                \n            </div>\n        `\n    }\n\n    update() {\n        // filter the data\n        if (this.data.length !== 0) {\n            this.data = this.data.filter((item) => {\n                if (item.toLowerCase().includes(this.value.toLowerCase())) {\n                    return item\n                }\n            })\n        }\n\n        if (this.data.length === 0) {\n            this.showEmptyState()\n        } else {\n            // we have items remove the empty state\n            this.hideEmptyState()\n            this.generateListItems()\n\n            // this only triggers once then sets the modal to open state\n            if (this.isOpen === false) {\n                this.openModal()\n            }\n        }\n    }\n\n    preventSubmit(e) {\n        e.preventDefault()\n    }\n\n    showEmptyState() {\n        this.removeListItems()\n        const emptyHtml = `<div>Sorry there are no results for <strong>\"${this.value}\"</strong> please search again</div>`\n        this.$empty.innerHTML = emptyHtml\n        this.$empty.style.display = 'block'\n\n        if (!this.isOpen) {\n            this.openModal()\n        }\n    }\n\n    hideEmptyState() {\n        this.$empty.innerHTML = ''\n        this.$empty.style.display = 'none'\n    }\n\n    ////////////////////////////////////////////////////\n    // hide and show modal\n    // bread and butter functions all event setup\n    // and breakdown here\n    ////////////////////////////////////////////////////\n    openModal() {\n        if (this.isDisabled) return\n\n        document.addEventListener('submit', this.preventSubmit)\n\n        // this way lets us cleanly breakdown this event listener later\n        this.checkKey = this.checkKey.bind(this)\n        document.addEventListener('keydown', this.checkKey, true)\n        this.isOpen = true\n\n        // styles and classes\n        this.$modal.style.pointerEvents = 'auto'\n        this.$modal.style.visibility = 'visible'\n        this.$input.classList.add(OPEN_CLASS)\n        this.$input.setAttribute('aria-expanded', 'true')\n\n        super.dispatch('openModal', {\n            input: this.$input,\n            modal: this.$modal,\n            flotsam: this,\n            options: this.options,\n        })\n    }\n\n    closeModal() {\n        // clean up the modal containers\n        this.hideEmptyState()\n        this.removeListItems()\n        this.unsetSelected()\n\n        if (this.isOpen) {\n            document.removeEventListener('submit', this.preventSubmit)\n            document.removeEventListener('keydown', this.checkKey, true)\n        }\n\n        this.$modal.style.pointerEvents = 'none'\n        this.$modal.style.visibility = 'hidden'\n        this.$input.classList.remove(OPEN_CLASS)\n        this.$input.focus()\n\n        this.isOpen = false\n\n        super.dispatch('closeModal', {\n            input: this.$input,\n            modal: this.$modal,\n            flotsam: this,\n            options: this.options,\n        })\n    }\n    ////////////////////////////////////////////////////\n    // key event checker - the key event triggers\n    ////////////////////////////////////////////////////\n\n    checkKey(e) {\n        if (e.keyCode == '38') {\n            // up arrowspot\n            this.selectPrev()\n        } else if (e.keyCode == '40') {\n            // down arrow\n            this.selectNext()\n        } else if (e.keyCode == '37') {\n            // left arrow\n        } else if (e.keyCode == '39') {\n            // right arrow\n        } else if (e.keyCode == '27') {\n            // escape\n            e.preventDefault()\n            this.closeModal()\n        } else if (e.keyCode == '9') {\n            // tab\n            e.preventDefault()\n            this.closeModal()\n        } else if (e.keyCode == '13') {\n            // enter\n            e.preventDefault()\n            this.closeModal()\n            this.$input.closest('form').submit()\n        }\n    }\n\n    ////////////////////////////////////////////////////\n    // visual selection of the items on the modal\n    ////////////////////////////////////////////////////\n    selectItem() {\n        const items = [...this.list.querySelectorAll('li')]\n        items.forEach((item, index) => {\n            if (index === this.currentSelected) {\n                item.classList.add('selected-item')\n\n                // a11y features\n                item.setAttribute('aria-selected', 'true')\n                console.log(item.id)\n                console.log(item)\n                this.$input.setAttribute('aria-activedescendant', item.id)\n\n                // if prevew is on show the selected in the input box\n                if (this.inputPreview) {\n                    this.setInput(item.innerText)\n                }\n\n                // !!EVENT!! on select key\n                super.dispatch('selectKey', {\n                    selected: item.textContent,\n                    input: this.$input,\n                    modal: this.$modal,\n                    flotsam: this,\n                    options: this.options,\n                })\n            } else {\n                item.classList.remove('selected-item')\n                item.setAttribute('aria-selected', 'false')\n            }\n        })\n    }\n\n    selectNext() {\n        if (this.currentSelected === null) {\n            this.currentSelected = 0\n        } else {\n            this.currentSelected = this.currentSelected + 1\n        }\n\n        this.selectItem()\n    }\n\n    selectPrev() {\n        this.currentSelected = this.currentSelected - 1\n        this.selectItem()\n    }\n\n    unsetSelected() {\n        // unset selected\n        this.currentSelected = null\n        const items = [...this.list.querySelectorAll('li')]\n\n        // a11y feature\n        this.$input.removeAttribute('aria-activedescendant')\n\n        items.forEach((item) => {\n            item.classList.remove('selected-item')\n        })\n    }\n\n    generateModal() {\n        console.log(this.uid)\n        return `\n        <div class=\"autocomplete-modal\" id=\"modal-${this.uid}\" >\n            <div class=\"autocomplete-modal__inner\">\n                <ul \n                    class=\"autocomplete-modal__list\" \n                    role=\"listbox\" \n                    id=\"modal-${this.uid}-list\">\n                </ul>\n                <div class=\"autocomplete-modal__empty\" style=\"display: none\"></div>\n            </div>\n        </div>\n    `\n    }\n\n    generateListItems() {\n        // clean up the dropdown of selects\n        this.unsetSelected()\n\n        let list = ``\n\n        this.data.forEach((item, index) => {\n            const regex = new RegExp(this.value, 'gi')\n            const response = item.replace(regex, (str) => {\n                return (\n                    `<span class=\"autocomplete-modal__list-highlight\">` +\n                    str +\n                    '</span>'\n                )\n            })\n            const posIndex = index + 1\n            list += `\n                <li class=\"autocomplete-modal__list-item\" role=\"option\" aria-posinset=\"${posIndex}\" aria-setsize=\"${this.data.length}\" aria-selected=\"false\" id=\"list-item-${index}--${this.uid}\" tab-index=\"-1\">\n                    ${response}\n                </li>`\n        })\n\n        // append list to the screen\n        this.list.innerHTML = list\n\n        // now that list is on DOM add event listeners\n        const listItems = [...this.list.querySelectorAll('li')]\n        listItems.forEach((item) => {\n            item.addEventListener('click', () => {\n                this.setInput(item.innerText)\n                this.closeModal()\n            })\n        })\n    }\n\n    // quick way to breka down list\n    removeListItems() {\n        this.list.innerHTML = ''\n    }\n\n    ////////////////////////////////////////////////////\n    // visually set input value (optionally triggered)\n    ////////////////////////////////////////////////////\n    setInput(textValue) {\n        this.$input.value = textValue\n    }\n\n    ////////////////////////////////////////////////////\n    // public triggers - USERS SHOULD ONLY USE THESE\n    ////////////////////////////////////////////////////\n    triggerClose() {\n        this.closeModal()\n    }\n\n    triggerDisable() {\n        this.isDisabled = true\n        this.closeModal()\n        super.dispatch('disabled', {\n            input: this.$input,\n            modal: this.$modal,\n            flotsam: this,\n            options: this.options,\n        })\n    }\n\n    triggerEnable() {\n        this.isDisabled = false\n    }\n\n    ////////////////////////////////////////////////////\n    // utils\n    ////////////////////////////////////////////////////\n    minCharsExcceded() {\n        if (this.value.length >= this.minChars) {\n            return true\n        } else {\n            return false\n        }\n    }\n\n    ////////////////////////////////////////////////////\n    // init fn - run on singleton creation\n    ////////////////////////////////////////////////////\n    init() {\n        this._self = this // so we can remove event listeners cleanly\n\n        // state\n        this.currentSelected = null\n        this.isDisabled = false\n\n        this.setUp()\n        // inject the modal onto the page and get an instance of it\n        this.initModal()\n\n        // add listener to onInput of input\n        this.initInputCheck()\n\n        console.log(this.uid)\n\n        // bug not triggering right away, so set it to next cycle\n        setTimeout(() => {\n            super.dispatch('init', {\n                input: this.$input,\n                modal: this.$modal,\n                flotsam: this,\n                options: this.options,\n            })\n        }, 0)\n    }\n}\n\nexport default flotsam\n"],"names":["DispatcherEvent","constructor","eventName","this","callbacks","registerCallback","callback","push","unregisterCallback","index","indexOf","splice","fire","data","slice","forEach","EventComponent","events","uid","Math","floor","random","dispatch","event","on","off","length","OPEN_CLASS","flotsam","options","super","$input","el","minChars","inputPreview","onAjax","hint","isEmpty","hasEmptyState","isOpen","init","setUp","setAttribute","id","initModal","insertAdjacentHTML","generateModal","generateAssistiveHint","generateStatus","$modal","document","querySelector","$status","list","$empty","style","pointerEvents","visibility","initInputCheck","isDisabled","addEventListener","e","value","target","minCharsExcceded","input","modal","then","result","update","closeModal","filter","item","toLowerCase","includes","showEmptyState","hideEmptyState","generateListItems","openModal","preventSubmit","preventDefault","removeListItems","innerHTML","display","checkKey","bind","classList","add","unsetSelected","removeEventListener","remove","focus","keyCode","selectPrev","selectNext","closest","submit","selectItem","querySelectorAll","currentSelected","console","log","setInput","innerText","selected","textContent","items","removeAttribute","regex","RegExp","replace","str","response","textValue","triggerClose","triggerDisable","triggerEnable","_self","setTimeout"],"mappings":"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"}